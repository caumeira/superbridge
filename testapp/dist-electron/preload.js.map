{"version":3,"file":"preload.js","sources":["../../superbridge/dist/channel-D40jLAJ0.js","../../superbridge/dist/log-9xug9B8y.js","../../superbridge/dist/preload.js","../src/electron/preload.ts"],"sourcesContent":["function n(e) {\n  return `SUPERBRIDGE__${e}`;\n}\nexport {\n  n as g\n};\n","function c(s) {\n  const e = \"color: #808080;\", n = `%cðŸŒ‰ ${s}:%c`, r = (...o) => {\n    console.info(n, e, \"\", ...o);\n  };\n  return r.debug = (...o) => {\n    console.debug(n, e, \"\", ...o);\n  }, r.warn = (...o) => {\n    console.warn(n, e, \"\", ...o);\n  }, r.error = (...o) => {\n    console.error(n, e, \"\", ...o);\n  }, r.rename = (o) => c(o), r;\n}\nc(\"superbridge\");\nexport {\n  c\n};\n","import { contextBridge as d, webFrame as g, ipcRenderer as i } from \"electron\";\nimport { g as n } from \"./channel-D40jLAJ0.js\";\nimport { c as u } from \"./log-9xug9B8y.js\";\nconst a = u(\"superbridge/preload\");\nif (!process.env.SUPERBRIDGE_SCHEMA)\n  throw new Error(\n    \"Superbridge is not initialized. Make sure to call initializeSuperbridgeMain() in your main process before creating BrowserWindow.\"\n  );\nconst c = JSON.parse(\n  process.env.SUPERBRIDGE_SCHEMA\n);\nfunction f() {\n  return {\n    send: async (e, r) => {\n      if (!e) throw new Error(\"Type is required\");\n      return a.debug(`Sending \"${e}\" with payload`, r), i.invoke(n(e), r);\n    },\n    handle: (e, r) => {\n      if (!e) throw new Error(\"Type is required\");\n      function o(s, t) {\n        a.debug(`Handling \"${e}\" with payload`, t), r(t, s);\n      }\n      return i.on(n(e), o), () => {\n        i.off(n(e), o);\n      };\n    },\n    get schema() {\n      return c;\n    },\n    get routingId() {\n      return g.routingId;\n    }\n  };\n}\nfunction w() {\n  d.exposeInMainWorld(\n    \"$superbridgeinterface\",\n    f()\n  );\n}\nexport {\n  w as initializeSuperbridgePreload\n};\n","import { initializeSuperbridgePreload } from \"superbridge/preload\";\n\ninitializeSuperbridgePreload();\n"],"names":["c","u","i","g","d","initializeSuperbridgePreload"],"mappings":";;;;AAAA,SAAS,CAAC,CAAC,CAAC,EAAE;AACd,EAAE,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AAC5B;;ACFA,SAASA,GAAC,CAAC,CAAC,EAAE;AACd,EAAE,MAAM,CAAC,GAAG,iBAAiB,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK;AACjE,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AAChC,GAAG;AACH,EAAE,OAAO,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK;AAC7B,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AACjC,GAAG,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK;AACxB,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AAChC,GAAG,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK;AACzB,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AACjC,GAAG,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,KAAKA,GAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAC9B;AACAA,GAAC,CAAC,aAAa,CAAC;;ACThB,MAAM,CAAA,GAAIC,IAAE,qBAAqB,CAAA;AACjC,IAAI,CAAC,OAAY,CAAA,GAAA,CAAA,kBAAA;AACf,EAAA,MAAM,IAAI,KAAA;AAAA,IACR;AAAA,GACF;AACF,MAAM,IAAI,IAAK,CAAA,KAAA;AAAA,EACb,OAAY,CAAA,GAAA,CAAA;AACd,CAAA;AACA,SAAS,CAAI,GAAA;AACX,EAAO,OAAA;AAAA,IACL,IAAA,EAAM,OAAO,CAAA,EAAG,CAAM,KAAA;AACpB,MAAA,IAAI,CAAC,CAAA,EAAS,MAAA,IAAI,MAAM,kBAAkB,CAAA;AAC1C,MAAA,OAAO,CAAE,CAAA,KAAA,CAAM,CAAY,SAAA,EAAA,CAAC,CAAkB,cAAA,CAAA,EAAA,CAAC,CAAG,EAAAC,oBAAA,CAAE,MAAO,CAAA,CAAA,CAAE,CAAC,CAAA,EAAG,CAAC,CAAA;AAAA,KACpE;AAAA,IACA,MAAA,EAAQ,CAAC,CAAA,EAAG,CAAM,KAAA;AAChB,MAAA,IAAI,CAAC,CAAA,EAAS,MAAA,IAAI,MAAM,kBAAkB,CAAA;AAC1C,MAAS,SAAA,CAAA,CAAE,GAAG,CAAG,EAAA;AACf,QAAE,CAAA,CAAA,KAAA,CAAM,aAAa,CAAC,CAAA,cAAA,CAAA,EAAkB,CAAC,CAAG,EAAA,CAAA,CAAE,GAAG,CAAC,CAAA;AAAA;AAEpD,MAAA,OAAOA,qBAAE,EAAG,CAAA,CAAA,CAAE,CAAC,CAAG,EAAA,CAAC,GAAG,MAAM;AAC1B,QAAAA,oBAAA,CAAE,GAAI,CAAA,CAAA,CAAE,CAAC,CAAA,EAAG,CAAC,CAAA;AAAA,OACf;AAAA,KACF;AAAA,IACA,IAAI,MAAS,GAAA;AACX,MAAO,OAAA,CAAA;AAAA,KACT;AAAA,IACA,IAAI,SAAY,GAAA;AACd,MAAA,OAAOC,iBAAE,CAAA,SAAA;AAAA;AACX,GACF;AACF;AACA,SAAS,CAAI,GAAA;AACX,EAAEC,sBAAA,CAAA,iBAAA;AAAA,IACA,uBAAA;AAAA,IACA,CAAE;AAAA,GACJ;AACF;;ACrCAC,CAA6B,EAAA;;"}