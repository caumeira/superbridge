{"version":3,"file":"preload.js","sources":["../../superbridge/dist/channel-D-ncwnNz.js","../../superbridge/dist/log-DQW4P4rO.js","../../superbridge/dist/preload.js","../src/electron/preload.ts"],"sourcesContent":["function getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var f = n.default;\n  if (typeof f == \"function\") {\n    var a = function a2() {\n      if (this instanceof a2) {\n        return Reflect.construct(f, arguments, this.constructor);\n      }\n      return f.apply(this, arguments);\n    };\n    a.prototype = f.prototype;\n  } else a = {};\n  Object.defineProperty(a, \"__esModule\", { value: true });\n  Object.keys(n).forEach(function(k) {\n    var d = Object.getOwnPropertyDescriptor(n, k);\n    Object.defineProperty(a, k, d.get ? d : {\n      enumerable: true,\n      get: function() {\n        return n[k];\n      }\n    });\n  });\n  return a;\n}\nconst __viteBrowserExternal = {};\nconst __viteBrowserExternal$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  default: __viteBrowserExternal\n}, Symbol.toStringTag, { value: \"Module\" }));\nconst require$$1 = /* @__PURE__ */ getAugmentedNamespace(__viteBrowserExternal$1);\nconst fs = require$$1;\nconst path = require$$1;\nconst pathFile = path.join(__dirname, \"path.txt\");\nfunction getElectronPath() {\n  let executablePath;\n  if (fs.existsSync(pathFile)) {\n    executablePath = fs.readFileSync(pathFile, \"utf-8\");\n  }\n  if (process.env.ELECTRON_OVERRIDE_DIST_PATH) {\n    return path.join(process.env.ELECTRON_OVERRIDE_DIST_PATH, executablePath || \"electron\");\n  }\n  if (executablePath) {\n    return path.join(__dirname, \"dist\", executablePath);\n  } else {\n    throw new Error(\"Electron failed to install correctly, please delete node_modules/electron and try installing again\");\n  }\n}\nvar electron = getElectronPath();\nfunction getIPCChannelName(name) {\n  return `SUPERBRIDGE__${name}`;\n}\nexport {\n  electron as e,\n  getIPCChannelName as g\n};\n//# sourceMappingURL=channel-D-ncwnNz.js.map\n","function createLogger(name) {\n  const LOG_COLOR = \"#808080\";\n  const LOG_STYLE = `color: ${LOG_COLOR};`;\n  const LABEL = `%cðŸŒ‰ ${name}:%c`;\n  const log2 = (...args) => {\n    console.info(LABEL, LOG_STYLE, \"\", ...args);\n  };\n  log2.debug = (...args) => {\n    console.debug(LABEL, LOG_STYLE, \"\", ...args);\n  };\n  log2.warn = (...args) => {\n    console.warn(LABEL, LOG_STYLE, \"\", ...args);\n  };\n  log2.error = (...args) => {\n    console.error(LABEL, LOG_STYLE, \"\", ...args);\n  };\n  log2.rename = (name2) => {\n    return createLogger(name2);\n  };\n  return log2;\n}\ncreateLogger(\"superbridge\");\nexport {\n  createLogger as c\n};\n//# sourceMappingURL=log-DQW4P4rO.js.map\n","import { e as electron, g as getIPCChannelName } from \"./channel-D-ncwnNz.js\";\nimport { c as createLogger } from \"./log-DQW4P4rO.js\";\nconst log = createLogger(\"superbridge/preload\");\nif (!process.env.SUPERBRIDGE_SCHEMA) {\n  throw new Error(\n    \"Superbridge is not initialized. Make sure to call initializeSuperbridgeMain() in your main process before creating BrowserWindow.\"\n  );\n}\nconst schema = JSON.parse(\n  process.env.SUPERBRIDGE_SCHEMA\n);\nfunction createSuperbridgeInterface() {\n  return {\n    send: async (type, payload) => {\n      if (!type) throw new Error(\"Type is required\");\n      log.debug(`Sending \"${type}\" with payload`, payload);\n      return electron.ipcRenderer.invoke(getIPCChannelName(type), payload);\n    },\n    handle: (type, handler) => {\n      if (!type) throw new Error(\"Type is required\");\n      function handleMessage(_event, payload) {\n        log.debug(`Handling \"${type}\" with payload`, payload);\n        handler(payload, _event);\n      }\n      electron.ipcRenderer.on(getIPCChannelName(type), handleMessage);\n      return () => {\n        electron.ipcRenderer.off(getIPCChannelName(type), handleMessage);\n      };\n    },\n    get schema() {\n      return schema;\n    },\n    get routingId() {\n      return electron.webFrame.routingId;\n    }\n  };\n}\nfunction initializeSuperbridgePreload() {\n  electron.contextBridge.exposeInMainWorld(\n    \"$superbridgeinterface\",\n    createSuperbridgeInterface()\n  );\n}\nexport {\n  initializeSuperbridgePreload\n};\n//# sourceMappingURL=preload.js.map\n","import { initializeSuperbridgePreload } from \"superbridge/preload\";\n\ninitializeSuperbridgePreload();\n"],"names":[],"mappings":"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"}