{"version":3,"file":"preload.js","sources":["../../superbridge/dist/preload/index.js","../src/electron/preload.ts"],"sourcesContent":["import { contextBridge, webFrame, ipcRenderer } from \"electron\";\nfunction getIPCChannelName(name) {\n  return `SUPERBRIDGE__${name}`;\n}\nfunction createLogger(name) {\n  const LOG_COLOR = \"#808080\";\n  const LOG_STYLE = `color: ${LOG_COLOR};`;\n  const LABEL = `%cðŸŒ‰ ${name}:%c`;\n  const log2 = (...args) => {\n    console.info(LABEL, LOG_STYLE, \"\", ...args);\n  };\n  log2.debug = (...args) => {\n    console.debug(LABEL, LOG_STYLE, \"\", ...args);\n  };\n  log2.warn = (...args) => {\n    console.warn(LABEL, LOG_STYLE, \"\", ...args);\n  };\n  log2.error = (...args) => {\n    console.error(LABEL, LOG_STYLE, \"\", ...args);\n  };\n  log2.rename = (name2) => {\n    return createLogger(name2);\n  };\n  return log2;\n}\ncreateLogger(\"superbridge\");\nconst log = createLogger(\"superbridge/preload\");\nif (!process.env.SUPERBRIDGE_SCHEMA) {\n  throw new Error(\n    \"Superbridge is not initialized. Make sure to call initializeSuperbridgeMain() in your main process before creating BrowserWindow.\"\n  );\n}\nconst schema = JSON.parse(\n  process.env.SUPERBRIDGE_SCHEMA\n);\nfunction createSuperbridgeInterface() {\n  return {\n    send: async (type, payload) => {\n      if (!type) throw new Error(\"Type is required\");\n      log.debug(`Sending \"${type}\" with payload`, payload);\n      return ipcRenderer.invoke(getIPCChannelName(type), payload);\n    },\n    handle: (type, handler) => {\n      if (!type) throw new Error(\"Type is required\");\n      function handleMessage(_event, payload) {\n        log.debug(`Handling \"${type}\" with payload`, payload);\n        handler(payload, _event);\n      }\n      ipcRenderer.on(getIPCChannelName(type), handleMessage);\n      return () => {\n        ipcRenderer.off(getIPCChannelName(type), handleMessage);\n      };\n    },\n    get schema() {\n      return schema;\n    },\n    get routingId() {\n      return webFrame.routingId;\n    }\n  };\n}\nfunction initializeSuperbridgePreload() {\n  contextBridge.exposeInMainWorld(\n    \"$superbridgeinterface\",\n    createSuperbridgeInterface()\n  );\n}\nexport {\n  initializeSuperbridgePreload\n};\n//# sourceMappingURL=index.js.map\n","import { initializeSuperbridgePreload } from \"superbridge/preload\";\n\ninitializeSuperbridgePreload();\n"],"names":["ipcRenderer","webFrame","contextBridge"],"mappings":"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"}