{"version":3,"file":"main.js","sources":["../../superbridge/shared/log.ts","../../superbridge/shared/messagesHandler.ts","../../superbridge/shared/defineMessage.ts","../src/bridge/message.ts","../../superbridge/shared/messages.ts","../../superbridge/utils/controlledPromise.ts","../../superbridge/utils/id.ts","../../superbridge/utils/once.ts","../../superbridge/shared/serializer/abortSignal.ts","../../superbridge/shared/serializer/callbacks.ts","../../node_modules/superjson/dist/double-indexed-kv.js","../../node_modules/superjson/dist/registry.js","../../node_modules/superjson/dist/class-registry.js","../../node_modules/superjson/dist/util.js","../../node_modules/superjson/dist/custom-transformer-registry.js","../../node_modules/superjson/dist/is.js","../../node_modules/superjson/dist/pathstringifier.js","../../node_modules/superjson/dist/transformer.js","../../node_modules/superjson/dist/accessDeep.js","../../node_modules/superjson/dist/plainer.js","../../node_modules/is-what/dist/index.js","../../node_modules/copy-anything/dist/index.js","../../node_modules/superjson/dist/index.js","../../superbridge/shared/serializer/index.ts","../../superbridge/shared/channel.ts","../../superbridge/shared/init.ts","../../superbridge/main/init.ts","../../superbridge/main/query.ts","../../superbridge/main/effect.ts","../../superbridge/main/mutation.ts","../../superbridge/utils/nestedRecord.ts","../../superbridge/main/schema.ts","../../superbridge/main/BridgeHandler.ts","../src/bridge/handler.ts","../src/electron/main.ts"],"sourcesContent":["type Log = (...args: any[]) => void;\n\ninterface Logger {\n  (...args: any[]): void;\n  debug: Log;\n  warn: Log;\n  error: Log;\n  rename: (name: string) => Logger;\n}\n\nexport function createLogger(name: string): Logger {\n  const LOG_COLOR = \"#808080\";\n  const LOG_STYLE = `color: ${LOG_COLOR};`;\n\n  const LABEL = `%cðŸŒ‰ ${name}:%c`;\n\n  const log: Logger = (...args) => {\n    console.info(LABEL, LOG_STYLE, \"\", ...args);\n  };\n\n  log.debug = (...args) => {\n    console.debug(LABEL, LOG_STYLE, \"\", ...args);\n  };\n\n  log.warn = (...args) => {\n    console.warn(LABEL, LOG_STYLE, \"\", ...args);\n  };\n\n  log.error = (...args) => {\n    console.error(LABEL, LOG_STYLE, \"\", ...args);\n  };\n\n  log.rename = (name: string) => {\n    return createLogger(name);\n  };\n\n  return log;\n}\n\nexport const log = createLogger(\"superbridge\");\n","import { createLogger } from \"./log\";\nimport { MaybePromise } from \"./types\";\nimport { type IpcRendererEvent, type IpcMainInvokeEvent } from \"electron\";\n\nconst log = createLogger(\"superbridge/messagesHandler\");\n\ntype Cancel = () => void;\n\nexport type MessageHandler<I, O> = (\n  payload: I,\n  event: IpcMainInvokeEvent | IpcRendererEvent\n) => MaybePromise<O>;\n\ninterface MessagesHandler {\n  send<I, O>(type: string, payload: I, webId?: number): Promise<O>;\n  handle<I, O>(type: string, handler: MessageHandler<I, O>): Cancel;\n}\n\nlet messagesHandler: MessagesHandler | null = null;\n\nexport function setMessagesHandler(handler: MessagesHandler) {\n  log.debug(\"Set messages handler\", handler);\n  messagesHandler = handler;\n}\n\nexport function getMessagesHandler(): MessagesHandler {\n  if (!messagesHandler) {\n    throw new Error(\"Messages handler not set\");\n  }\n\n  return messagesHandler;\n}\n","import { createLogger } from \"./log\";\nimport { getMessagesHandler } from \"./messagesHandler\";\nimport { type IpcRendererEvent, type IpcMainInvokeEvent } from \"electron\";\n\nconst log = createLogger(\"superbridge/messages\");\n\ntype Cancel = () => void;\n\ninterface MessageDefinition<I, O> {\n  name: string;\n  send: (payload: I, webId?: number) => Promise<O>;\n  handle: (\n    handler: (\n      payload: I,\n      event: IpcRendererEvent | IpcMainInvokeEvent\n    ) => Promise<O>\n  ) => Cancel;\n}\n\nconst registeredMessageTypes = new Set<string>();\n\nexport function defineBridgeMessage<I, O = void>(\n  name: string\n): MessageDefinition<I, O> {\n  if (registeredMessageTypes.has(name)) {\n    log.warn(`Message \"${name}\" is already registered`);\n  }\n\n  registeredMessageTypes.add(name);\n\n  return {\n    name,\n    async send(payload: I, webId?: number) {\n      log.debug(`Sending \"${name}\" with payload`, payload);\n      const messagesHandler = getMessagesHandler();\n\n      return messagesHandler.send(name, payload, webId);\n    },\n    handle(handler) {\n      const messagesHandler = getMessagesHandler();\n\n      return messagesHandler.handle(name, (payload, event) => {\n        log.debug(`Handling \"${name}\" with payload`, payload);\n        return handler(payload as I, event);\n      });\n    },\n  };\n}\n","import { defineBridgeMessage } from \"superbridge\";\n\nexport const $getBodyId = defineBridgeMessage<void, string>(\"$getBodyId\");\n","import { defineBridgeMessage } from \"./defineMessage\";\n\nexport interface ExecuteMessageData {\n  id: string;\n  path: string;\n  args: unknown[];\n}\n\nexport type HandleResult<T> =\n  | {\n      requestId: string;\n      type: \"success\";\n      result: T;\n    }\n  | {\n      requestId: string;\n      type: \"error\";\n      error: string;\n    };\n\nexport const $execute = defineBridgeMessage<ExecuteMessageData, unknown>(\n  \"$execute\"\n);\n\nexport const $reset = defineBridgeMessage<void, void>(\"$reset\");\n","export interface PromiseController<T> {\n  resolve: (value: T) => void;\n  reject: (reason?: any) => void;\n}\n\nexport function createControlledPromise<T>() {\n  let controller: PromiseController<T> | undefined;\n\n  const promise = new Promise<T>((_resolve, _reject) => {\n    controller = {\n      resolve: _resolve,\n      reject: _reject,\n    };\n  });\n\n  return [promise, controller!] as const;\n}\n","const ALPHABET =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\nexport function generateId(length: number = 12) {\n  let id = \"\";\n\n  for (let i = 0; i < length; i++) {\n    id += ALPHABET[Math.floor(Math.random() * ALPHABET.length)];\n  }\n\n  return id;\n}\n","export function once<T>(fn: (...args: any[]) => T): (...args: any[]) => T {\n  let called = false;\n  let result: T;\n\n  return function (...args: any[]) {\n    if (called) return result;\n\n    called = true;\n    result = fn(...args);\n\n    return result;\n  };\n}\n","import { CustomTransfomer } from \"./types\";\nimport { defineBridgeMessage } from \"../defineMessage\";\nimport { generateId } from \"../../utils/id\";\nimport { once } from \"../../utils/once\";\n\nconst signalRemoteController = new Map<string, AbortController>();\n\nexport const $abortRemoteSignal = defineBridgeMessage<{\n  signalId: string;\n}>(\"$abortRemoteSignal\");\n\nexport function registerSignal(localSignal: AbortSignal) {\n  initializeRemoteSignals();\n\n  const id = `$$signal-${generateId()}`;\n  const remoteController = new AbortController();\n\n  signalRemoteController.set(id, remoteController);\n\n  // If local signal is aborted, abort the remote one\n  localSignal.addEventListener(\"abort\", () => {\n    $abortRemoteSignal.send({ signalId: id });\n    signalRemoteController.delete(id);\n  });\n\n  signalFinalizationRegistry.register(localSignal, id);\n\n  return id;\n}\n\nexport const initializeRemoteSignals = once(function initializeRemoteSignals() {\n  $abortRemoteSignal.handle(async ({ signalId }) => {\n    const controller = signalRemoteController.get(signalId);\n\n    if (!controller) return;\n\n    controller.abort();\n    signalRemoteController.delete(signalId);\n  });\n});\n\nconst signalFinalizationRegistry = new FinalizationRegistry<string>(\n  (remoteSignalId) => {\n    const controller = signalRemoteController.get(remoteSignalId);\n\n    if (!controller) return;\n\n    controller.abort();\n    signalRemoteController.delete(remoteSignalId);\n  }\n);\n\nfunction deserializeSignalId(signalId: string): AbortSignal {\n  initializeRemoteSignals();\n\n  const controller = new AbortController();\n\n  signalRemoteController.set(signalId, controller);\n\n  return controller.signal;\n}\n\nexport const abortSignalSerializer: CustomTransfomer<AbortSignal, string> = {\n  isApplicable: (value): value is AbortSignal => value instanceof AbortSignal,\n  serialize: (signal: AbortSignal) => registerSignal(signal),\n  deserialize: (signalId: string) => deserializeSignalId(signalId),\n};\n","import { CustomTransfomer } from \"./types\";\nimport { createLogger } from \"../log\";\nimport { defineBridgeMessage } from \"../defineMessage\";\nimport { generateId } from \"../../utils/id\";\nimport { once } from \"../../utils/once\";\n\nconst log = createLogger(\"superbridge/callbacks\");\n\nconst callbacks = new Map<string, Function>();\n\nsetInterval(() => {\n  console.log(\"callbacks\", callbacks.size);\n}, 1000);\n\nexport const $removeRemoteCallback = defineBridgeMessage<{\n  callbackId: string;\n}>(\"$removeRemoteCallback\");\n\nexport const $triggerRemoteCallback = defineBridgeMessage<\n  {\n    callbackId: string;\n    args: unknown[];\n  },\n  unknown\n>(\"$triggerRemoteCallback\");\n\nfunction getCallbackId(callback: Function) {\n  let id = `$$callback-${generateId()}`;\n\n  if (typeof window !== \"undefined\") {\n    id = `${id}-${window.$superbridge.routingId}`;\n  }\n\n  return id;\n}\n\n/**\n * $$callback-123-456\n */\nfunction getCallbackRoutingId(callbackId: string) {\n  const [_callbackLabel, _callbackId, routingId] = callbackId.split(\"-\");\n\n  if (!routingId) return null;\n\n  return parseInt(routingId, 10);\n}\n\nexport function registerCallback(callback: Function) {\n  initializeRemoteCallbacks();\n\n  const id = getCallbackId(callback);\n\n  callbacks.set(id, callback);\n\n  return id;\n}\n\nexport const initializeRemoteCallbacks = once(() => {\n  // Shared between renderer and main\n  $removeRemoteCallback.handle(async ({ callbackId }) => {\n    log.debug(`Handling remove remote callback \"${callbackId}\"`);\n    callbacks.delete(callbackId);\n  });\n\n  $triggerRemoteCallback.handle(async ({ callbackId, args }) => {\n    log.debug(\n      `Handling trigger remote callback \"${callbackId}\" with callId`,\n      args\n    );\n    const callback = callbacks.get(callbackId);\n\n    if (!callback) {\n      throw new Error(`Callback \"${callbackId}\" not found`);\n    }\n\n    return await callback(...args);\n  });\n});\n\nconst callbackFinalizationRegistry = new FinalizationRegistry<string>(\n  (remoteCallbackId) => {\n    $removeRemoteCallback.send(\n      { callbackId: remoteCallbackId },\n      getCallbackRoutingId(remoteCallbackId) ?? undefined\n    );\n  }\n);\n\nfunction deserializeCallbackId(callbackId: string) {\n  async function remoteCallbackInvoker(...args: unknown[]) {\n    log.debug(`Invoking remote callback \"${callbackId}\" with args`, args);\n\n    return await $triggerRemoteCallback.send(\n      {\n        callbackId: callbackId,\n        args,\n      },\n      getCallbackRoutingId(callbackId) ?? undefined\n    );\n  }\n\n  callbackFinalizationRegistry.register(remoteCallbackInvoker, callbackId);\n\n  return remoteCallbackInvoker;\n}\n\nexport const callbackSerializer: CustomTransfomer<Function, string> = {\n  isApplicable: (value): value is Function => typeof value === \"function\",\n  serialize: (callback: Function) => registerCallback(callback),\n  deserialize: deserializeCallbackId,\n};\n","export class DoubleIndexedKV {\n    constructor() {\n        this.keyToValue = new Map();\n        this.valueToKey = new Map();\n    }\n    set(key, value) {\n        this.keyToValue.set(key, value);\n        this.valueToKey.set(value, key);\n    }\n    getByKey(key) {\n        return this.keyToValue.get(key);\n    }\n    getByValue(value) {\n        return this.valueToKey.get(value);\n    }\n    clear() {\n        this.keyToValue.clear();\n        this.valueToKey.clear();\n    }\n}\n//# sourceMappingURL=double-indexed-kv.js.map","import { DoubleIndexedKV } from './double-indexed-kv.js';\nexport class Registry {\n    constructor(generateIdentifier) {\n        this.generateIdentifier = generateIdentifier;\n        this.kv = new DoubleIndexedKV();\n    }\n    register(value, identifier) {\n        if (this.kv.getByValue(value)) {\n            return;\n        }\n        if (!identifier) {\n            identifier = this.generateIdentifier(value);\n        }\n        this.kv.set(identifier, value);\n    }\n    clear() {\n        this.kv.clear();\n    }\n    getIdentifier(value) {\n        return this.kv.getByValue(value);\n    }\n    getValue(identifier) {\n        return this.kv.getByKey(identifier);\n    }\n}\n//# sourceMappingURL=registry.js.map","import { Registry } from './registry.js';\nexport class ClassRegistry extends Registry {\n    constructor() {\n        super(c => c.name);\n        this.classToAllowedProps = new Map();\n    }\n    register(value, options) {\n        if (typeof options === 'object') {\n            if (options.allowProps) {\n                this.classToAllowedProps.set(value, options.allowProps);\n            }\n            super.register(value, options.identifier);\n        }\n        else {\n            super.register(value, options);\n        }\n    }\n    getAllowedProps(value) {\n        return this.classToAllowedProps.get(value);\n    }\n}\n//# sourceMappingURL=class-registry.js.map","function valuesOfObj(record) {\n    if ('values' in Object) {\n        // eslint-disable-next-line es5/no-es6-methods\n        return Object.values(record);\n    }\n    const values = [];\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in record) {\n        if (record.hasOwnProperty(key)) {\n            values.push(record[key]);\n        }\n    }\n    return values;\n}\nexport function find(record, predicate) {\n    const values = valuesOfObj(record);\n    if ('find' in values) {\n        // eslint-disable-next-line es5/no-es6-methods\n        return values.find(predicate);\n    }\n    const valuesNotNever = values;\n    for (let i = 0; i < valuesNotNever.length; i++) {\n        const value = valuesNotNever[i];\n        if (predicate(value)) {\n            return value;\n        }\n    }\n    return undefined;\n}\nexport function forEach(record, run) {\n    Object.entries(record).forEach(([key, value]) => run(value, key));\n}\nexport function includes(arr, value) {\n    return arr.indexOf(value) !== -1;\n}\nexport function findArr(record, predicate) {\n    for (let i = 0; i < record.length; i++) {\n        const value = record[i];\n        if (predicate(value)) {\n            return value;\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=util.js.map","import { find } from './util.js';\nexport class CustomTransformerRegistry {\n    constructor() {\n        this.transfomers = {};\n    }\n    register(transformer) {\n        this.transfomers[transformer.name] = transformer;\n    }\n    findApplicable(v) {\n        return find(this.transfomers, transformer => transformer.isApplicable(v));\n    }\n    findByName(name) {\n        return this.transfomers[name];\n    }\n}\n//# sourceMappingURL=custom-transformer-registry.js.map","const getType = (payload) => Object.prototype.toString.call(payload).slice(8, -1);\nexport const isUndefined = (payload) => typeof payload === 'undefined';\nexport const isNull = (payload) => payload === null;\nexport const isPlainObject = (payload) => {\n    if (typeof payload !== 'object' || payload === null)\n        return false;\n    if (payload === Object.prototype)\n        return false;\n    if (Object.getPrototypeOf(payload) === null)\n        return true;\n    return Object.getPrototypeOf(payload) === Object.prototype;\n};\nexport const isEmptyObject = (payload) => isPlainObject(payload) && Object.keys(payload).length === 0;\nexport const isArray = (payload) => Array.isArray(payload);\nexport const isString = (payload) => typeof payload === 'string';\nexport const isNumber = (payload) => typeof payload === 'number' && !isNaN(payload);\nexport const isBoolean = (payload) => typeof payload === 'boolean';\nexport const isRegExp = (payload) => payload instanceof RegExp;\nexport const isMap = (payload) => payload instanceof Map;\nexport const isSet = (payload) => payload instanceof Set;\nexport const isSymbol = (payload) => getType(payload) === 'Symbol';\nexport const isDate = (payload) => payload instanceof Date && !isNaN(payload.valueOf());\nexport const isError = (payload) => payload instanceof Error;\nexport const isNaNValue = (payload) => typeof payload === 'number' && isNaN(payload);\nexport const isPrimitive = (payload) => isBoolean(payload) ||\n    isNull(payload) ||\n    isUndefined(payload) ||\n    isNumber(payload) ||\n    isString(payload) ||\n    isSymbol(payload);\nexport const isBigint = (payload) => typeof payload === 'bigint';\nexport const isInfinite = (payload) => payload === Infinity || payload === -Infinity;\nexport const isTypedArray = (payload) => ArrayBuffer.isView(payload) && !(payload instanceof DataView);\nexport const isURL = (payload) => payload instanceof URL;\n//# sourceMappingURL=is.js.map","export const escapeKey = (key) => key.replace(/\\./g, '\\\\.');\nexport const stringifyPath = (path) => path\n    .map(String)\n    .map(escapeKey)\n    .join('.');\nexport const parsePath = (string) => {\n    const result = [];\n    let segment = '';\n    for (let i = 0; i < string.length; i++) {\n        let char = string.charAt(i);\n        const isEscapedDot = char === '\\\\' && string.charAt(i + 1) === '.';\n        if (isEscapedDot) {\n            segment += '.';\n            i++;\n            continue;\n        }\n        const isEndOfSegment = char === '.';\n        if (isEndOfSegment) {\n            result.push(segment);\n            segment = '';\n            continue;\n        }\n        segment += char;\n    }\n    const lastSegment = segment;\n    result.push(lastSegment);\n    return result;\n};\n//# sourceMappingURL=pathstringifier.js.map","import { isBigint, isDate, isInfinite, isMap, isNaNValue, isRegExp, isSet, isUndefined, isSymbol, isArray, isError, isTypedArray, isURL, } from './is.js';\nimport { findArr } from './util.js';\nfunction simpleTransformation(isApplicable, annotation, transform, untransform) {\n    return {\n        isApplicable,\n        annotation,\n        transform,\n        untransform,\n    };\n}\nconst simpleRules = [\n    simpleTransformation(isUndefined, 'undefined', () => null, () => undefined),\n    simpleTransformation(isBigint, 'bigint', v => v.toString(), v => {\n        if (typeof BigInt !== 'undefined') {\n            return BigInt(v);\n        }\n        console.error('Please add a BigInt polyfill.');\n        return v;\n    }),\n    simpleTransformation(isDate, 'Date', v => v.toISOString(), v => new Date(v)),\n    simpleTransformation(isError, 'Error', (v, superJson) => {\n        const baseError = {\n            name: v.name,\n            message: v.message,\n        };\n        superJson.allowedErrorProps.forEach(prop => {\n            baseError[prop] = v[prop];\n        });\n        return baseError;\n    }, (v, superJson) => {\n        const e = new Error(v.message);\n        e.name = v.name;\n        e.stack = v.stack;\n        superJson.allowedErrorProps.forEach(prop => {\n            e[prop] = v[prop];\n        });\n        return e;\n    }),\n    simpleTransformation(isRegExp, 'regexp', v => '' + v, regex => {\n        const body = regex.slice(1, regex.lastIndexOf('/'));\n        const flags = regex.slice(regex.lastIndexOf('/') + 1);\n        return new RegExp(body, flags);\n    }),\n    simpleTransformation(isSet, 'set', \n    // (sets only exist in es6+)\n    // eslint-disable-next-line es5/no-es6-methods\n    v => [...v.values()], v => new Set(v)),\n    simpleTransformation(isMap, 'map', v => [...v.entries()], v => new Map(v)),\n    simpleTransformation((v) => isNaNValue(v) || isInfinite(v), 'number', v => {\n        if (isNaNValue(v)) {\n            return 'NaN';\n        }\n        if (v > 0) {\n            return 'Infinity';\n        }\n        else {\n            return '-Infinity';\n        }\n    }, Number),\n    simpleTransformation((v) => v === 0 && 1 / v === -Infinity, 'number', () => {\n        return '-0';\n    }, Number),\n    simpleTransformation(isURL, 'URL', v => v.toString(), v => new URL(v)),\n];\nfunction compositeTransformation(isApplicable, annotation, transform, untransform) {\n    return {\n        isApplicable,\n        annotation,\n        transform,\n        untransform,\n    };\n}\nconst symbolRule = compositeTransformation((s, superJson) => {\n    if (isSymbol(s)) {\n        const isRegistered = !!superJson.symbolRegistry.getIdentifier(s);\n        return isRegistered;\n    }\n    return false;\n}, (s, superJson) => {\n    const identifier = superJson.symbolRegistry.getIdentifier(s);\n    return ['symbol', identifier];\n}, v => v.description, (_, a, superJson) => {\n    const value = superJson.symbolRegistry.getValue(a[1]);\n    if (!value) {\n        throw new Error('Trying to deserialize unknown symbol');\n    }\n    return value;\n});\nconst constructorToName = [\n    Int8Array,\n    Uint8Array,\n    Int16Array,\n    Uint16Array,\n    Int32Array,\n    Uint32Array,\n    Float32Array,\n    Float64Array,\n    Uint8ClampedArray,\n].reduce((obj, ctor) => {\n    obj[ctor.name] = ctor;\n    return obj;\n}, {});\nconst typedArrayRule = compositeTransformation(isTypedArray, v => ['typed-array', v.constructor.name], v => [...v], (v, a) => {\n    const ctor = constructorToName[a[1]];\n    if (!ctor) {\n        throw new Error('Trying to deserialize unknown typed array');\n    }\n    return new ctor(v);\n});\nexport function isInstanceOfRegisteredClass(potentialClass, superJson) {\n    if (potentialClass?.constructor) {\n        const isRegistered = !!superJson.classRegistry.getIdentifier(potentialClass.constructor);\n        return isRegistered;\n    }\n    return false;\n}\nconst classRule = compositeTransformation(isInstanceOfRegisteredClass, (clazz, superJson) => {\n    const identifier = superJson.classRegistry.getIdentifier(clazz.constructor);\n    return ['class', identifier];\n}, (clazz, superJson) => {\n    const allowedProps = superJson.classRegistry.getAllowedProps(clazz.constructor);\n    if (!allowedProps) {\n        return { ...clazz };\n    }\n    const result = {};\n    allowedProps.forEach(prop => {\n        result[prop] = clazz[prop];\n    });\n    return result;\n}, (v, a, superJson) => {\n    const clazz = superJson.classRegistry.getValue(a[1]);\n    if (!clazz) {\n        throw new Error(`Trying to deserialize unknown class '${a[1]}' - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564`);\n    }\n    return Object.assign(Object.create(clazz.prototype), v);\n});\nconst customRule = compositeTransformation((value, superJson) => {\n    return !!superJson.customTransformerRegistry.findApplicable(value);\n}, (value, superJson) => {\n    const transformer = superJson.customTransformerRegistry.findApplicable(value);\n    return ['custom', transformer.name];\n}, (value, superJson) => {\n    const transformer = superJson.customTransformerRegistry.findApplicable(value);\n    return transformer.serialize(value);\n}, (v, a, superJson) => {\n    const transformer = superJson.customTransformerRegistry.findByName(a[1]);\n    if (!transformer) {\n        throw new Error('Trying to deserialize unknown custom value');\n    }\n    return transformer.deserialize(v);\n});\nconst compositeRules = [classRule, symbolRule, customRule, typedArrayRule];\nexport const transformValue = (value, superJson) => {\n    const applicableCompositeRule = findArr(compositeRules, rule => rule.isApplicable(value, superJson));\n    if (applicableCompositeRule) {\n        return {\n            value: applicableCompositeRule.transform(value, superJson),\n            type: applicableCompositeRule.annotation(value, superJson),\n        };\n    }\n    const applicableSimpleRule = findArr(simpleRules, rule => rule.isApplicable(value, superJson));\n    if (applicableSimpleRule) {\n        return {\n            value: applicableSimpleRule.transform(value, superJson),\n            type: applicableSimpleRule.annotation,\n        };\n    }\n    return undefined;\n};\nconst simpleRulesByAnnotation = {};\nsimpleRules.forEach(rule => {\n    simpleRulesByAnnotation[rule.annotation] = rule;\n});\nexport const untransformValue = (json, type, superJson) => {\n    if (isArray(type)) {\n        switch (type[0]) {\n            case 'symbol':\n                return symbolRule.untransform(json, type, superJson);\n            case 'class':\n                return classRule.untransform(json, type, superJson);\n            case 'custom':\n                return customRule.untransform(json, type, superJson);\n            case 'typed-array':\n                return typedArrayRule.untransform(json, type, superJson);\n            default:\n                throw new Error('Unknown transformation: ' + type);\n        }\n    }\n    else {\n        const transformation = simpleRulesByAnnotation[type];\n        if (!transformation) {\n            throw new Error('Unknown transformation: ' + type);\n        }\n        return transformation.untransform(json, superJson);\n    }\n};\n//# sourceMappingURL=transformer.js.map","import { isMap, isArray, isPlainObject, isSet } from './is.js';\nimport { includes } from './util.js';\nconst getNthKey = (value, n) => {\n    if (n > value.size)\n        throw new Error('index out of bounds');\n    const keys = value.keys();\n    while (n > 0) {\n        keys.next();\n        n--;\n    }\n    return keys.next().value;\n};\nfunction validatePath(path) {\n    if (includes(path, '__proto__')) {\n        throw new Error('__proto__ is not allowed as a property');\n    }\n    if (includes(path, 'prototype')) {\n        throw new Error('prototype is not allowed as a property');\n    }\n    if (includes(path, 'constructor')) {\n        throw new Error('constructor is not allowed as a property');\n    }\n}\nexport const getDeep = (object, path) => {\n    validatePath(path);\n    for (let i = 0; i < path.length; i++) {\n        const key = path[i];\n        if (isSet(object)) {\n            object = getNthKey(object, +key);\n        }\n        else if (isMap(object)) {\n            const row = +key;\n            const type = +path[++i] === 0 ? 'key' : 'value';\n            const keyOfRow = getNthKey(object, row);\n            switch (type) {\n                case 'key':\n                    object = keyOfRow;\n                    break;\n                case 'value':\n                    object = object.get(keyOfRow);\n                    break;\n            }\n        }\n        else {\n            object = object[key];\n        }\n    }\n    return object;\n};\nexport const setDeep = (object, path, mapper) => {\n    validatePath(path);\n    if (path.length === 0) {\n        return mapper(object);\n    }\n    let parent = object;\n    for (let i = 0; i < path.length - 1; i++) {\n        const key = path[i];\n        if (isArray(parent)) {\n            const index = +key;\n            parent = parent[index];\n        }\n        else if (isPlainObject(parent)) {\n            parent = parent[key];\n        }\n        else if (isSet(parent)) {\n            const row = +key;\n            parent = getNthKey(parent, row);\n        }\n        else if (isMap(parent)) {\n            const isEnd = i === path.length - 2;\n            if (isEnd) {\n                break;\n            }\n            const row = +key;\n            const type = +path[++i] === 0 ? 'key' : 'value';\n            const keyOfRow = getNthKey(parent, row);\n            switch (type) {\n                case 'key':\n                    parent = keyOfRow;\n                    break;\n                case 'value':\n                    parent = parent.get(keyOfRow);\n                    break;\n            }\n        }\n    }\n    const lastKey = path[path.length - 1];\n    if (isArray(parent)) {\n        parent[+lastKey] = mapper(parent[+lastKey]);\n    }\n    else if (isPlainObject(parent)) {\n        parent[lastKey] = mapper(parent[lastKey]);\n    }\n    if (isSet(parent)) {\n        const oldValue = getNthKey(parent, +lastKey);\n        const newValue = mapper(oldValue);\n        if (oldValue !== newValue) {\n            parent.delete(oldValue);\n            parent.add(newValue);\n        }\n    }\n    if (isMap(parent)) {\n        const row = +path[path.length - 2];\n        const keyToRow = getNthKey(parent, row);\n        const type = +lastKey === 0 ? 'key' : 'value';\n        switch (type) {\n            case 'key': {\n                const newKey = mapper(keyToRow);\n                parent.set(newKey, parent.get(keyToRow));\n                if (newKey !== keyToRow) {\n                    parent.delete(keyToRow);\n                }\n                break;\n            }\n            case 'value': {\n                parent.set(keyToRow, mapper(parent.get(keyToRow)));\n                break;\n            }\n        }\n    }\n    return object;\n};\n//# sourceMappingURL=accessDeep.js.map","import { isArray, isEmptyObject, isMap, isPlainObject, isPrimitive, isSet, } from './is.js';\nimport { escapeKey, stringifyPath } from './pathstringifier.js';\nimport { isInstanceOfRegisteredClass, transformValue, untransformValue, } from './transformer.js';\nimport { includes, forEach } from './util.js';\nimport { parsePath } from './pathstringifier.js';\nimport { getDeep, setDeep } from './accessDeep.js';\nfunction traverse(tree, walker, origin = []) {\n    if (!tree) {\n        return;\n    }\n    if (!isArray(tree)) {\n        forEach(tree, (subtree, key) => traverse(subtree, walker, [...origin, ...parsePath(key)]));\n        return;\n    }\n    const [nodeValue, children] = tree;\n    if (children) {\n        forEach(children, (child, key) => {\n            traverse(child, walker, [...origin, ...parsePath(key)]);\n        });\n    }\n    walker(nodeValue, origin);\n}\nexport function applyValueAnnotations(plain, annotations, superJson) {\n    traverse(annotations, (type, path) => {\n        plain = setDeep(plain, path, v => untransformValue(v, type, superJson));\n    });\n    return plain;\n}\nexport function applyReferentialEqualityAnnotations(plain, annotations) {\n    function apply(identicalPaths, path) {\n        const object = getDeep(plain, parsePath(path));\n        identicalPaths.map(parsePath).forEach(identicalObjectPath => {\n            plain = setDeep(plain, identicalObjectPath, () => object);\n        });\n    }\n    if (isArray(annotations)) {\n        const [root, other] = annotations;\n        root.forEach(identicalPath => {\n            plain = setDeep(plain, parsePath(identicalPath), () => plain);\n        });\n        if (other) {\n            forEach(other, apply);\n        }\n    }\n    else {\n        forEach(annotations, apply);\n    }\n    return plain;\n}\nconst isDeep = (object, superJson) => isPlainObject(object) ||\n    isArray(object) ||\n    isMap(object) ||\n    isSet(object) ||\n    isInstanceOfRegisteredClass(object, superJson);\nfunction addIdentity(object, path, identities) {\n    const existingSet = identities.get(object);\n    if (existingSet) {\n        existingSet.push(path);\n    }\n    else {\n        identities.set(object, [path]);\n    }\n}\nexport function generateReferentialEqualityAnnotations(identitites, dedupe) {\n    const result = {};\n    let rootEqualityPaths = undefined;\n    identitites.forEach(paths => {\n        if (paths.length <= 1) {\n            return;\n        }\n        // if we're not deduping, all of these objects continue existing.\n        // putting the shortest path first makes it easier to parse for humans\n        // if we're deduping though, only the first entry will still exist, so we can't do this optimisation.\n        if (!dedupe) {\n            paths = paths\n                .map(path => path.map(String))\n                .sort((a, b) => a.length - b.length);\n        }\n        const [representativePath, ...identicalPaths] = paths;\n        if (representativePath.length === 0) {\n            rootEqualityPaths = identicalPaths.map(stringifyPath);\n        }\n        else {\n            result[stringifyPath(representativePath)] = identicalPaths.map(stringifyPath);\n        }\n    });\n    if (rootEqualityPaths) {\n        if (isEmptyObject(result)) {\n            return [rootEqualityPaths];\n        }\n        else {\n            return [rootEqualityPaths, result];\n        }\n    }\n    else {\n        return isEmptyObject(result) ? undefined : result;\n    }\n}\nexport const walker = (object, identities, superJson, dedupe, path = [], objectsInThisPath = [], seenObjects = new Map()) => {\n    const primitive = isPrimitive(object);\n    if (!primitive) {\n        addIdentity(object, path, identities);\n        const seen = seenObjects.get(object);\n        if (seen) {\n            // short-circuit result if we've seen this object before\n            return dedupe\n                ? {\n                    transformedValue: null,\n                }\n                : seen;\n        }\n    }\n    if (!isDeep(object, superJson)) {\n        const transformed = transformValue(object, superJson);\n        const result = transformed\n            ? {\n                transformedValue: transformed.value,\n                annotations: [transformed.type],\n            }\n            : {\n                transformedValue: object,\n            };\n        if (!primitive) {\n            seenObjects.set(object, result);\n        }\n        return result;\n    }\n    if (includes(objectsInThisPath, object)) {\n        // prevent circular references\n        return {\n            transformedValue: null,\n        };\n    }\n    const transformationResult = transformValue(object, superJson);\n    const transformed = transformationResult?.value ?? object;\n    const transformedValue = isArray(transformed) ? [] : {};\n    const innerAnnotations = {};\n    forEach(transformed, (value, index) => {\n        if (index === '__proto__' ||\n            index === 'constructor' ||\n            index === 'prototype') {\n            throw new Error(`Detected property ${index}. This is a prototype pollution risk, please remove it from your object.`);\n        }\n        const recursiveResult = walker(value, identities, superJson, dedupe, [...path, index], [...objectsInThisPath, object], seenObjects);\n        transformedValue[index] = recursiveResult.transformedValue;\n        if (isArray(recursiveResult.annotations)) {\n            innerAnnotations[index] = recursiveResult.annotations;\n        }\n        else if (isPlainObject(recursiveResult.annotations)) {\n            forEach(recursiveResult.annotations, (tree, key) => {\n                innerAnnotations[escapeKey(index) + '.' + key] = tree;\n            });\n        }\n    });\n    const result = isEmptyObject(innerAnnotations)\n        ? {\n            transformedValue,\n            annotations: !!transformationResult\n                ? [transformationResult.type]\n                : undefined,\n        }\n        : {\n            transformedValue,\n            annotations: !!transformationResult\n                ? [transformationResult.type, innerAnnotations]\n                : innerAnnotations,\n        };\n    if (!primitive) {\n        seenObjects.set(object, result);\n    }\n    return result;\n};\n//# sourceMappingURL=plainer.js.map","function getType(payload) {\n  return Object.prototype.toString.call(payload).slice(8, -1);\n}\n\nfunction isAnyObject(payload) {\n  return getType(payload) === \"Object\";\n}\n\nfunction isArray(payload) {\n  return getType(payload) === \"Array\";\n}\n\nfunction isBlob(payload) {\n  return getType(payload) === \"Blob\";\n}\n\nfunction isBoolean(payload) {\n  return getType(payload) === \"Boolean\";\n}\n\nfunction isDate(payload) {\n  return getType(payload) === \"Date\" && !isNaN(payload);\n}\n\nfunction isEmptyArray(payload) {\n  return isArray(payload) && payload.length === 0;\n}\n\nfunction isPlainObject(payload) {\n  if (getType(payload) !== \"Object\")\n    return false;\n  const prototype = Object.getPrototypeOf(payload);\n  return !!prototype && prototype.constructor === Object && prototype === Object.prototype;\n}\n\nfunction isEmptyObject(payload) {\n  return isPlainObject(payload) && Object.keys(payload).length === 0;\n}\n\nfunction isEmptyString(payload) {\n  return payload === \"\";\n}\n\nfunction isError(payload) {\n  return getType(payload) === \"Error\" || payload instanceof Error;\n}\n\nfunction isFile(payload) {\n  return getType(payload) === \"File\";\n}\n\nfunction isFullArray(payload) {\n  return isArray(payload) && payload.length > 0;\n}\n\nfunction isFullObject(payload) {\n  return isPlainObject(payload) && Object.keys(payload).length > 0;\n}\n\nfunction isString(payload) {\n  return getType(payload) === \"String\";\n}\n\nfunction isFullString(payload) {\n  return isString(payload) && payload !== \"\";\n}\n\nfunction isFunction(payload) {\n  return typeof payload === \"function\";\n}\n\nfunction isType(payload, type) {\n  if (!(type instanceof Function)) {\n    throw new TypeError(\"Type must be a function\");\n  }\n  if (!Object.prototype.hasOwnProperty.call(type, \"prototype\")) {\n    throw new TypeError(\"Type is not a class\");\n  }\n  const name = type.name;\n  return getType(payload) === name || Boolean(payload && payload.constructor === type);\n}\n\nfunction isInstanceOf(value, classOrClassName) {\n  if (typeof classOrClassName === \"function\") {\n    for (let p = value; p; p = Object.getPrototypeOf(p)) {\n      if (isType(p, classOrClassName)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    for (let p = value; p; p = Object.getPrototypeOf(p)) {\n      if (getType(p) === classOrClassName) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction isMap(payload) {\n  return getType(payload) === \"Map\";\n}\n\nfunction isNaNValue(payload) {\n  return getType(payload) === \"Number\" && isNaN(payload);\n}\n\nfunction isNumber(payload) {\n  return getType(payload) === \"Number\" && !isNaN(payload);\n}\n\nfunction isNegativeNumber(payload) {\n  return isNumber(payload) && payload < 0;\n}\n\nfunction isNull(payload) {\n  return getType(payload) === \"Null\";\n}\n\nfunction isOneOf(a, b, c, d, e) {\n  return (value) => a(value) || b(value) || !!c && c(value) || !!d && d(value) || !!e && e(value);\n}\n\nfunction isUndefined(payload) {\n  return getType(payload) === \"Undefined\";\n}\n\nconst isNullOrUndefined = isOneOf(isNull, isUndefined);\n\nfunction isObject(payload) {\n  return isPlainObject(payload);\n}\n\nfunction isObjectLike(payload) {\n  return isAnyObject(payload);\n}\n\nfunction isPositiveNumber(payload) {\n  return isNumber(payload) && payload > 0;\n}\n\nfunction isSymbol(payload) {\n  return getType(payload) === \"Symbol\";\n}\n\nfunction isPrimitive(payload) {\n  return isBoolean(payload) || isNull(payload) || isUndefined(payload) || isNumber(payload) || isString(payload) || isSymbol(payload);\n}\n\nfunction isPromise(payload) {\n  return getType(payload) === \"Promise\";\n}\n\nfunction isRegExp(payload) {\n  return getType(payload) === \"RegExp\";\n}\n\nfunction isSet(payload) {\n  return getType(payload) === \"Set\";\n}\n\nfunction isWeakMap(payload) {\n  return getType(payload) === \"WeakMap\";\n}\n\nfunction isWeakSet(payload) {\n  return getType(payload) === \"WeakSet\";\n}\n\nexport { getType, isAnyObject, isArray, isBlob, isBoolean, isDate, isEmptyArray, isEmptyObject, isEmptyString, isError, isFile, isFullArray, isFullObject, isFullString, isFunction, isInstanceOf, isMap, isNaNValue, isNegativeNumber, isNull, isNullOrUndefined, isNumber, isObject, isObjectLike, isOneOf, isPlainObject, isPositiveNumber, isPrimitive, isPromise, isRegExp, isSet, isString, isSymbol, isType, isUndefined, isWeakMap, isWeakSet };\n","import { isArray, isPlainObject } from 'is-what';\n\nfunction assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\n  const propType = {}.propertyIsEnumerable.call(originalObject, key) ? \"enumerable\" : \"nonenumerable\";\n  if (propType === \"enumerable\")\n    carry[key] = newVal;\n  if (includeNonenumerable && propType === \"nonenumerable\") {\n    Object.defineProperty(carry, key, {\n      value: newVal,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nfunction copy(target, options = {}) {\n  if (isArray(target)) {\n    return target.map((item) => copy(item, options));\n  }\n  if (!isPlainObject(target)) {\n    return target;\n  }\n  const props = Object.getOwnPropertyNames(target);\n  const symbols = Object.getOwnPropertySymbols(target);\n  return [...props, ...symbols].reduce((carry, key) => {\n    if (isArray(options.props) && !options.props.includes(key)) {\n      return carry;\n    }\n    const val = target[key];\n    const newVal = copy(val, options);\n    assignProp(carry, key, newVal, target, options.nonenumerable);\n    return carry;\n  }, {});\n}\n\nexport { copy };\n","import { ClassRegistry } from './class-registry.js';\nimport { Registry } from './registry.js';\nimport { CustomTransformerRegistry, } from './custom-transformer-registry.js';\nimport { applyReferentialEqualityAnnotations, applyValueAnnotations, generateReferentialEqualityAnnotations, walker, } from './plainer.js';\nimport { copy } from 'copy-anything';\nexport default class SuperJSON {\n    /**\n     * @param dedupeReferentialEqualities  If true, SuperJSON will make sure only one instance of referentially equal objects are serialized and the rest are replaced with `null`.\n     */\n    constructor({ dedupe = false, } = {}) {\n        this.classRegistry = new ClassRegistry();\n        this.symbolRegistry = new Registry(s => s.description ?? '');\n        this.customTransformerRegistry = new CustomTransformerRegistry();\n        this.allowedErrorProps = [];\n        this.dedupe = dedupe;\n    }\n    serialize(object) {\n        const identities = new Map();\n        const output = walker(object, identities, this, this.dedupe);\n        const res = {\n            json: output.transformedValue,\n        };\n        if (output.annotations) {\n            res.meta = {\n                ...res.meta,\n                values: output.annotations,\n            };\n        }\n        const equalityAnnotations = generateReferentialEqualityAnnotations(identities, this.dedupe);\n        if (equalityAnnotations) {\n            res.meta = {\n                ...res.meta,\n                referentialEqualities: equalityAnnotations,\n            };\n        }\n        return res;\n    }\n    deserialize(payload) {\n        const { json, meta } = payload;\n        let result = copy(json);\n        if (meta?.values) {\n            result = applyValueAnnotations(result, meta.values, this);\n        }\n        if (meta?.referentialEqualities) {\n            result = applyReferentialEqualityAnnotations(result, meta.referentialEqualities);\n        }\n        return result;\n    }\n    stringify(object) {\n        return JSON.stringify(this.serialize(object));\n    }\n    parse(string) {\n        return this.deserialize(JSON.parse(string));\n    }\n    registerClass(v, options) {\n        this.classRegistry.register(v, options);\n    }\n    registerSymbol(v, identifier) {\n        this.symbolRegistry.register(v, identifier);\n    }\n    registerCustom(transformer, name) {\n        this.customTransformerRegistry.register({\n            name,\n            ...transformer,\n        });\n    }\n    allowErrorProps(...props) {\n        this.allowedErrorProps.push(...props);\n    }\n}\nSuperJSON.defaultInstance = new SuperJSON();\nSuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(SuperJSON.defaultInstance);\nSuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(SuperJSON.defaultInstance);\nSuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(SuperJSON.defaultInstance);\nSuperJSON.parse = SuperJSON.defaultInstance.parse.bind(SuperJSON.defaultInstance);\nSuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(SuperJSON.defaultInstance);\nSuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(SuperJSON.defaultInstance);\nSuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(SuperJSON.defaultInstance);\nSuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(SuperJSON.defaultInstance);\nexport { SuperJSON };\nexport const serialize = SuperJSON.serialize;\nexport const deserialize = SuperJSON.deserialize;\nexport const stringify = SuperJSON.stringify;\nexport const parse = SuperJSON.parse;\nexport const registerClass = SuperJSON.registerClass;\nexport const registerCustom = SuperJSON.registerCustom;\nexport const registerSymbol = SuperJSON.registerSymbol;\nexport const allowErrorProps = SuperJSON.allowErrorProps;\n//# sourceMappingURL=index.js.map","import { abortSignalSerializer, initializeRemoteSignals } from \"./abortSignal\";\nimport { callbackSerializer, initializeRemoteCallbacks } from \"./callbacks\";\n\nimport SuperJSON from \"superjson\";\nimport { createLogger } from \"../log\";\nimport { once } from \"../../utils/once\";\n\nconst log = createLogger(\"superbridge/serializer\");\n\nexport const bridgeSerializer = new SuperJSON();\n\nexport const initializeRemoteSerializer = once(() => {\n  log.debug(\"Initialize remote serializer\");\n  initializeRemoteCallbacks();\n  initializeRemoteSignals();\n});\n\nbridgeSerializer.registerCustom(callbackSerializer, \"superbridge-callback\");\nbridgeSerializer.registerCustom(\n  abortSignalSerializer,\n  \"superbridge-abortSignal\"\n);\n","export function getIPCChannelName(name: string) {\n  return `SUPERBRIDGE__${name}`;\n}\n","import { initializeRemoteSerializer } from \"./serializer\";\nimport { once } from \"../utils/once\";\n\nexport const initializeShared = once(() => {\n  initializeRemoteSerializer();\n});\n","import { $execute, $reset, HandleResult } from \"../shared/messages\";\nimport { BridgeHandler, BridgeHandlerInput } from \"./BridgeHandler\";\nimport {\n  BrowserWindow,\n  IpcMainInvokeEvent,\n  WebContents,\n  ipcMain,\n  webContents,\n} from \"electron\";\nimport { MessageHandler, setMessagesHandler } from \"../shared/messagesHandler\";\nimport {\n  PromiseController,\n  createControlledPromise,\n} from \"../utils/controlledPromise\";\n\nimport { RawBridgeData } from \"../shared/types\";\nimport { bridgeSerializer } from \"../shared/serializer\";\nimport { createLogger } from \"../shared/log\";\nimport { generateId } from \"../utils/id\";\nimport { getIPCChannelName } from \"../shared/channel\";\nimport { initializeShared } from \"../shared/init\";\n\nconst log = createLogger(\"superbridge/main/init\");\n\nconst pendingRequests = new Map<string, PromiseController<any>>();\n\nfunction initializeSuperbridgeMainMessageHandler() {\n  log.debug(\"Initialize Superbridge Main Message Handler\");\n\n  ipcMain.handle(\n    getIPCChannelName(\"HANDLE_RESULT\"),\n    (_event, payload: RawBridgeData) => {\n      const result = bridgeSerializer.deserialize<HandleResult<any>>(\n        payload.payload\n      );\n\n      const pendingRequestController = pendingRequests.get(result.requestId);\n\n      if (!pendingRequestController) {\n        throw new Error(\n          `No controller found for requestId: ${result.requestId}`\n        );\n      }\n\n      pendingRequests.delete(result.requestId);\n\n      if (result.type === \"success\") {\n        pendingRequestController.resolve(result.result);\n      } else {\n        pendingRequestController.reject(result.error);\n      }\n    }\n  );\n\n  setMessagesHandler({\n    async send<I, O>(type: string, payload: I, webId: number) {\n      if (webId === undefined) {\n        throw new Error(\"webId is required\");\n      }\n\n      const requestId = generateId();\n\n      const targetWebContents = webContents.fromId(webId);\n\n      if (!targetWebContents) {\n        throw new Error(`Target webContents not found for id: ${webId}`);\n      }\n\n      log.debug(`Send \"${type}\" with payload`, payload);\n\n      const [promise, controller] = createControlledPromise<O>();\n\n      pendingRequests.set(requestId, controller);\n\n      targetWebContents.send(getIPCChannelName(type), {\n        webId: targetWebContents.id,\n        requestId,\n        payload: bridgeSerializer.serialize(payload),\n      } as RawBridgeData);\n\n      return promise;\n    },\n    handle<I, O>(type: string, handler: MessageHandler<I, O>) {\n      async function handleMessage(\n        _event: IpcMainInvokeEvent,\n        payload: RawBridgeData\n      ) {\n        log.debug(`Handling \"${type}\" with payload`, payload);\n\n        const rawResult = await handler(\n          bridgeSerializer.deserialize<I>(payload.payload),\n          _event\n        );\n\n        return bridgeSerializer.serialize(rawResult);\n      }\n\n      ipcMain.handle(getIPCChannelName(type), handleMessage);\n\n      return () => {\n        ipcMain.removeHandler(getIPCChannelName(type));\n      };\n    },\n  });\n}\n\nexport function initializeSuperbridgeMain<T extends BridgeHandlerInput>(\n  handler: BridgeHandler<T>\n) {\n  log.debug(\"Initialize Superbridge Main\");\n\n  initializeSuperbridgeMainMessageHandler();\n  initializeShared();\n\n  process.env.SUPERBRIDGE_SCHEMA = JSON.stringify(handler.schema);\n\n  $execute.handle(async (payload) => {\n    log.debug(`Handling execute \"${payload.path}\" with args`, payload.args);\n    return handler.execute(payload.path, payload.args);\n  });\n\n  $reset.handle(async () => {\n    log.debug(\"Handling reset\");\n    await handler.reset();\n  });\n}\n","const QUERY_SYMBOL = Symbol(\"query\");\n\nexport interface Query<Args extends unknown[] = unknown[], Result = unknown> {\n  (...args: Args): Promise<Result>;\n  [QUERY_SYMBOL]: \"query\";\n}\n\nexport function getIsQuery<Args extends unknown[], Result>(\n  value: unknown\n): value is Query<Args, Result> {\n  return (\n    typeof value === \"function\" &&\n    QUERY_SYMBOL in value &&\n    value[QUERY_SYMBOL] === \"query\"\n  );\n}\n\nexport function query<Args extends unknown[], Result>(\n  handler: (...args: Args) => Result\n): Query<Args, Result> {\n  const queryFunction: Query<Args, Result> = async (...args: Args) => {\n    return handler(...args);\n  };\n\n  queryFunction[QUERY_SYMBOL] = \"query\";\n\n  return queryFunction;\n}\n","const EFFECT_SYMBOL = Symbol(\"effect\");\n\ntype Cleanup = () => void;\ntype MaybePromise<T> = T | Promise<T>;\n\nexport interface Effect<Args extends unknown[] = unknown[]> {\n  (...args: Args): MaybePromise<Cleanup>;\n  [EFFECT_SYMBOL]: \"effect\";\n}\n\nexport function getIsEffect<Args extends unknown[]>(\n  value: unknown\n): value is Effect<Args> {\n  return (\n    typeof value === \"function\" &&\n    EFFECT_SYMBOL in value &&\n    value[EFFECT_SYMBOL] === \"effect\"\n  );\n}\n\nexport function effect<Args extends unknown[]>(\n  handler: (...args: Args) => MaybePromise<Cleanup>\n): Effect<Args> {\n  const effectFunction: Effect<Args> = async (...args: Args) => {\n    return handler(...args);\n  };\n\n  effectFunction[EFFECT_SYMBOL] = \"effect\";\n\n  return effectFunction;\n}\n","const MUTATION_SYMBOL = Symbol(\"mutation\");\n\nexport interface Mutation<\n  Args extends unknown[] = unknown[],\n  Result = unknown\n> {\n  (...args: Args): Promise<Result>;\n  [MUTATION_SYMBOL]: \"mutation\";\n}\n\nexport function getIsMutation<Args extends unknown[], Result>(\n  value: unknown\n): value is Mutation<Args, Result> {\n  return (\n    typeof value === \"function\" &&\n    MUTATION_SYMBOL in value &&\n    value[MUTATION_SYMBOL] === \"mutation\"\n  );\n}\n\nexport function mutation<Args extends unknown[], Result>(\n  handler: (...args: Args) => Result\n): Mutation<Args, Result> {\n  const mutationFunction: Mutation<Args, Result> = async (...args: Args) => {\n    return handler(...args);\n  };\n\n  mutationFunction[MUTATION_SYMBOL] = \"mutation\";\n\n  return mutationFunction;\n}\n","type PropertiesMapValue = unknown | NestedRecord;\n\ntype NestedRecord = {\n  [key: string]: PropertiesMapValue;\n};\n\nexport type PropertiesMap<LeafType = unknown> = Map<string, LeafType>;\n\n/**\n * Returns true only for plain, {} objects (not instances of classes, arrays, etc.)\n */\nfunction getIsPlainObject(value: unknown): value is Record<string, unknown> {\n  return value?.constructor === Object;\n}\n\nfunction getPath(currentPath: string, key: string) {\n  if (!currentPath) return key;\n\n  return `${currentPath}.${key}`;\n}\n\nfunction buildPropertiesMap<LeafType = unknown>(\n  currentPath: string,\n  result: PropertiesMap<LeafType>,\n  input: NestedRecord\n) {\n  for (const [key, value] of Object.entries(input)) {\n    const path = getPath(currentPath, key);\n\n    if (getIsPlainObject(value)) {\n      buildPropertiesMap(path, result, value);\n    } else {\n      result.set(path, value as LeafType);\n    }\n  }\n}\n\nexport function createNestedRecordPropertiesMap<LeafType = unknown>(\n  input: NestedRecord\n): PropertiesMap<LeafType> {\n  const map = new Map<string, LeafType>();\n\n  buildPropertiesMap(\"\", map, input);\n\n  return map;\n}\n\nfunction innerMapNestedRecord(\n  currentPath: string,\n  input: NestedRecord,\n  mapper: (value: unknown, path: string) => unknown\n): NestedRecord {\n  const result: NestedRecord = {};\n\n  for (const [key, value] of Object.entries(input)) {\n    const path = getPath(currentPath, key);\n\n    if (getIsPlainObject(value)) {\n      result[key] = innerMapNestedRecord(path, value, mapper);\n    } else {\n      result[key] = mapper(value, path);\n    }\n  }\n\n  return result;\n}\n\nexport function mapNestedRecord(\n  input: NestedRecord,\n  mapper: (value: unknown, path: string) => unknown\n): NestedRecord {\n  return innerMapNestedRecord(\"\", input, mapper);\n}\n\nexport function unwrapNestedRecord(\n  pathMap: Map<string, unknown> | Record<string, unknown>\n): Record<string, unknown> {\n  const result: Record<string, unknown> = {};\n\n  // Convert to array of entries if input is a Map\n  const entries =\n    pathMap instanceof Map\n      ? Array.from(pathMap.entries())\n      : Object.entries(pathMap);\n\n  for (const [path, value] of entries) {\n    // Skip empty paths\n    if (!path) continue;\n\n    const keys = path.split(\".\");\n    let current = result;\n\n    // Navigate to the correct nesting level\n    for (let i = 0; i < keys.length - 1; i++) {\n      const key = keys[i];\n\n      // Create nested object if it doesn't exist\n      if (!(key in current)) {\n        current[key] = {};\n      }\n\n      // If the current value isn't an object, it will be overwritten\n      if (typeof current[key] !== \"object\" || current[key] === null) {\n        current[key] = {};\n      }\n\n      // Move to the next level\n      current = current[key] as Record<string, unknown>;\n    }\n\n    // Set the value at the final key\n    const lastKey = keys[keys.length - 1];\n    current[lastKey] = value;\n  }\n\n  return result;\n}\n","import { BridgeHandlerInput } from \"./BridgeHandler\";\nimport { createNestedRecordPropertiesMap } from \"../utils/nestedRecord\";\nimport { getIsEffect } from \"./effect\";\nimport { getIsMutation } from \"./mutation\";\nimport { getIsQuery } from \"./query\";\n\nexport type BridgeFieldSchema = {\n  type: \"query\" | \"mutation\" | \"effect\";\n};\n\nexport type BridgeHandlerSchema = Record<string, BridgeFieldSchema>;\n\nexport function getBridgeHandlerSchema(input: BridgeHandlerInput) {\n  const map = createNestedRecordPropertiesMap(input);\n\n  const schema: BridgeHandlerSchema = {};\n\n  for (const [key, value] of map.entries()) {\n    if (getIsQuery(value)) {\n      schema[key] = {\n        type: \"query\",\n      };\n      continue;\n    }\n\n    if (getIsMutation(value)) {\n      schema[key] = {\n        type: \"mutation\",\n      };\n      continue;\n    }\n\n    if (getIsEffect(value)) {\n      schema[key] = {\n        type: \"effect\",\n      };\n      continue;\n    }\n\n    if (typeof value === \"function\") {\n      schema[key] = {\n        type: \"query\",\n      };\n      continue;\n    }\n\n    console.warn(`Unknown field type: ${key}`, value);\n  }\n\n  return schema;\n}\n","import { BridgeHandlerSchema, getBridgeHandlerSchema } from \"./schema\";\nimport { Effect, getIsEffect } from \"./effect\";\nimport { Mutation, getIsMutation } from \"./mutation\";\n\nimport { MaybePromise } from \"../shared/types\";\nimport { Query } from \"./query\";\nimport { createLogger } from \"../shared/log\";\nimport { createNestedRecordPropertiesMap } from \"../utils/nestedRecord\";\n\nconst log = createLogger(\"superbridge/main/BridgeHandler\");\n\nexport type BridgeNestedObject<LeafType> = {\n  [key: string]: BridgeNestedObject<LeafType> | LeafType;\n};\n\ntype Cleanup = () => void;\n\nexport type BridgeSingleHandler =\n  | Query<any[], any>\n  | Mutation<any[], any>\n  | Effect<any[]>;\n\nexport type BridgeHandlerInput = BridgeNestedObject<BridgeSingleHandler>;\n\nexport class BridgeHandler<T extends BridgeHandlerInput> {\n  private handlersMap: Map<string, BridgeSingleHandler>;\n  public readonly schema: BridgeHandlerSchema;\n\n  constructor(public readonly input: T) {\n    this.handlersMap =\n      createNestedRecordPropertiesMap<BridgeSingleHandler>(input);\n    this.schema = getBridgeHandlerSchema(input);\n  }\n\n  private pendingMutations = new Set<Promise<unknown>>();\n  private runningEffects = new Set<MaybePromise<Cleanup>>();\n\n  private async waitForPendingMutations() {\n    while (this.pendingMutations.size) {\n      const promises = [...this.pendingMutations];\n\n      for (const promise of promises) {\n        try {\n          await promise;\n        } catch {}\n      }\n    }\n  }\n\n  private addPendingMutation(promise: Promise<unknown>) {\n    this.pendingMutations.add(promise);\n\n    promise.finally(() => {\n      this.pendingMutations.delete(promise);\n    });\n  }\n\n  private getHandler(path: string) {\n    const handler = this.handlersMap.get(path);\n\n    if (!handler) {\n      throw new Error(`Handler for path ${path} not found`);\n    }\n\n    return handler;\n  }\n\n  async execute(path: string, args: unknown[]) {\n    log.debug(`Execute \"${path}\" with args`, args);\n\n    const handler = this.getHandler(path);\n\n    if (!handler) {\n      throw new Error(`Handler for path ${path} not found`);\n    }\n\n    await this.waitForPendingMutations();\n\n    if (getIsMutation(handler)) {\n      const resultPromise = handler(...args);\n\n      this.addPendingMutation(resultPromise);\n\n      return resultPromise;\n    }\n\n    if (getIsEffect(handler)) {\n      const cleanupPromise = handler(...args);\n\n      this.runningEffects.add(cleanupPromise);\n\n      return async () => {\n        this.runningEffects.delete(cleanupPromise);\n\n        const cleanup = await cleanupPromise;\n\n        try {\n          cleanup();\n        } catch {\n          console.error(\"Error cleaning up effect\");\n        }\n      };\n    }\n\n    return handler(...args);\n  }\n\n  async cleanAllEffects() {\n    const cleanupPromises = [...this.runningEffects];\n\n    this.runningEffects.clear();\n\n    for (const cleanupPromise of cleanupPromises) {\n      const cleanup = await cleanupPromise;\n\n      try {\n        cleanup();\n      } catch {\n        console.error(\"Error cleaning up effect\", cleanupPromise);\n      }\n    }\n  }\n\n  async reset() {\n    log.debug(\"Reset\");\n    await this.cleanAllEffects();\n\n    this.pendingMutations.clear();\n  }\n}\n\nexport function createBridgeHandler<T extends BridgeHandlerInput>(\n  input: T\n): BridgeHandler<T> {\n  return new BridgeHandler(input);\n}\n","import { createBridgeHandler, effect, mutation, query } from \"superbridge/main\";\n\nlet foo = \"foo\";\n\nexport const bridgeHandler = createBridgeHandler({\n  ping: query(async (date: Date, onProgress?: (progress: number) => void) => {\n    for (let i = 0; i < 10; i++) {\n      onProgress?.(i);\n      await new Promise((resolve) => setTimeout(resolve, 50));\n    }\n\n    return `pong ${date.toISOString()}`;\n  }),\n  pings: effect(\n    (\n      interval: number,\n      callback: (date: Date, main: (main: string) => void) => void\n    ) => {\n      console.log(\"setting interval\");\n      function main(main: string) {\n        console.log(\"main\", main);\n      }\n\n      const intervalId = setInterval(() => {\n        callback(new Date(), main);\n      }, interval);\n\n      return () => {\n        console.log(\"clearing interval\");\n        clearInterval(intervalId);\n      };\n    }\n  ),\n  foo: {\n    change: mutation(async (message: string) => {\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      foo = message;\n    }),\n    get: query(async () => {\n      return foo;\n    }),\n  },\n});\n\nexport type AppBridge = typeof bridgeHandler;\n","import { BrowserWindow, app } from \"electron\";\n\nimport { $getBodyId } from \"../bridge/message\";\nimport { bridgeHandler } from \"../bridge/handler\";\nimport { initializeSuperbridgeMain } from \"superbridge/main\";\nimport path from \"path\";\n\n// Enable garbage collection exposure for debugging\napp.commandLine.appendSwitch(\"js-flags\", \"--expose-gc\");\n\n// The built directory structure\n//\n// â”œâ”€â”¬â”€â”¬ dist\n// â”‚ â”‚ â””â”€â”€ index.html\n// â”‚ â”‚\n// â”‚ â”œâ”€â”¬ dist-electron\n// â”‚ â”‚ â”œâ”€â”€ main.js\n// â”‚ â”‚ â””â”€â”€ preload.js\n// â”‚\nprocess.env.DIST = path.join(__dirname, \"../..\");\nprocess.env.VITE_PUBLIC = app.isPackaged\n  ? process.env.DIST\n  : path.join(process.env.DIST, \"../public\");\n\nprocess.env.SUPERBRIDGE_DEBUG = \"true\";\n\nlet win: BrowserWindow | null = null;\n// ðŸš§ Use ['ENV_NAME'] avoid vite:define plugin - Vite@2.x\nconst VITE_DEV_SERVER_URL = process.env[\"VITE_DEV_SERVER_URL\"];\n\nfunction createWindow() {\n  initializeSuperbridgeMain(bridgeHandler);\n\n  win = new BrowserWindow({\n    width: 1200,\n    height: 800,\n    webPreferences: {\n      nodeIntegration: true,\n      contextIsolation: true,\n      preload: path.join(__dirname, \"preload.js\"),\n    },\n  });\n\n  setTimeout(() => {\n    $getBodyId.send().then((id) => {\n      console.log(\"id\", id);\n    });\n  }, 2000);\n\n  // Test active push message to Renderer-process.\n  win.webContents.on(\"did-finish-load\", () => {\n    win?.webContents.send(\"main-process-message\", new Date().toLocaleString());\n  });\n\n  if (VITE_DEV_SERVER_URL) {\n    win.loadURL(VITE_DEV_SERVER_URL);\n  } else {\n    // win.loadFile('dist/index.html')\n    win.loadFile(path.join(process.env.DIST as string, \"index.html\"));\n  }\n}\n\napp.on(\"window-all-closed\", () => {\n  win = null;\n  if (process.platform !== \"darwin\") {\n    app.quit();\n  }\n});\n\napp.whenReady().then(createWindow);\n\napp.on(\"activate\", () => {\n  if (BrowserWindow.getAllWindows().length === 0) {\n    createWindow();\n  }\n});\n"],"names":["log","name","initializeRemoteSignals","getType","isPlainObject","isArray","ipcMain","webContents","main","app","BrowserWindow"],"mappings":";;;;;AAUO,SAAS,aAAa,IAAsB,EAAA;AACjD,EAAA,MAAM,SAAY,GAAA,SAAA;AAClB,EAAM,MAAA,SAAA,GAAY,UAAU,SAAS,CAAA,CAAA,CAAA;AAErC,EAAM,MAAA,KAAA,GAAQ,QAAQ,IAAI,CAAA,GAAA,CAAA;AAE1B,EAAMA,MAAAA,IAAAA,GAAc,IAAI,IAAS,KAAA;AAC/B,IAAA,OAAA,CAAQ,IAAK,CAAA,KAAA,EAAO,SAAW,EAAA,EAAA,EAAI,GAAG,IAAI,CAAA;AAAA,GAC5C;AAEA,EAAAA,IAAAA,CAAI,KAAQ,GAAA,CAAA,GAAI,IAAS,KAAA;AACvB,IAAA,OAAA,CAAQ,KAAM,CAAA,KAAA,EAAO,SAAW,EAAA,EAAA,EAAI,GAAG,IAAI,CAAA;AAAA,GAC7C;AAEA,EAAAA,IAAAA,CAAI,IAAO,GAAA,CAAA,GAAI,IAAS,KAAA;AACtB,IAAA,OAAA,CAAQ,IAAK,CAAA,KAAA,EAAO,SAAW,EAAA,EAAA,EAAI,GAAG,IAAI,CAAA;AAAA,GAC5C;AAEA,EAAAA,IAAAA,CAAI,KAAQ,GAAA,CAAA,GAAI,IAAS,KAAA;AACvB,IAAA,OAAA,CAAQ,KAAM,CAAA,KAAA,EAAO,SAAW,EAAA,EAAA,EAAI,GAAG,IAAI,CAAA;AAAA,GAC7C;AAEA,EAAAA,IAAAA,CAAI,MAAS,GAAA,CAACC,KAAiB,KAAA;AAC7B,IAAA,OAAO,aAAaA,KAAI,CAAA;AAAA,GAC1B;AAEA,EAAOD,OAAAA,IAAAA;AACT;AAEmB,aAAa,aAAa;;ACnC7C,MAAMA,KAAA,GAAM,aAAa,6BAA6B,CAAA;AActD,IAAI,eAA0C,GAAA,IAAA;AAEvC,SAAS,mBAAmB,OAA0B,EAAA;AAC3D,EAAIA,KAAA,CAAA,KAAA,CAAM,wBAAwB,OAAO,CAAA;AACzC,EAAkB,eAAA,GAAA,OAAA;AACpB;AAEO,SAAS,kBAAsC,GAAA;AACpD,EAAA,IAAI,CAAC,eAAiB,EAAA;AACpB,IAAM,MAAA,IAAI,MAAM,0BAA0B,CAAA;AAAA;AAG5C,EAAO,OAAA,eAAA;AACT;;AC3BA,MAAMA,KAAA,GAAM,aAAa,sBAAsB,CAAA;AAe/C,MAAM,sBAAA,uBAA6B,GAAY,EAAA;AAExC,SAAS,oBACd,IACyB,EAAA;AACzB,EAAI,IAAA,sBAAA,CAAuB,GAAI,CAAA,IAAI,CAAG,EAAA;AACpC,IAAIA,KAAA,CAAA,IAAA,CAAK,CAAY,SAAA,EAAA,IAAI,CAAyB,uBAAA,CAAA,CAAA;AAAA;AAGpD,EAAA,sBAAA,CAAuB,IAAI,IAAI,CAAA;AAE/B,EAAO,OAAA;AAAA,IACL,IAAA;AAAA,IACA,MAAM,IAAK,CAAA,OAAA,EAAY,KAAgB,EAAA;AACrC,MAAAA,KAAA,CAAI,KAAM,CAAA,CAAA,SAAA,EAAY,IAAI,CAAA,cAAA,CAAA,EAAkB,OAAO,CAAA;AACnD,MAAA,MAAM,kBAAkB,kBAAmB,EAAA;AAE3C,MAAA,OAAO,eAAgB,CAAA,IAAA,CAAK,IAAM,EAAA,OAAA,EAAS,KAAK,CAAA;AAAA,KAClD;AAAA,IACA,OAAO,OAAS,EAAA;AACd,MAAA,MAAM,kBAAkB,kBAAmB,EAAA;AAE3C,MAAA,OAAO,eAAgB,CAAA,MAAA,CAAO,IAAM,EAAA,CAAC,SAAS,KAAU,KAAA;AACtD,QAAAA,KAAA,CAAI,KAAM,CAAA,CAAA,UAAA,EAAa,IAAI,CAAA,cAAA,CAAA,EAAkB,OAAO,CAAA;AACpD,QAAO,OAAA,OAAA,CAAQ,SAAc,KAAK,CAAA;AAAA,OACnC,CAAA;AAAA;AACH,GACF;AACF;;AC7Ca,MAAA,UAAA,GAAa,oBAAkC,YAAY,CAAA;;ACkBjE,MAAM,QAAW,GAAA,mBAAA;AAAA,EACtB;AACF,CAAA;AAEa,MAAA,MAAA,GAAS,oBAAgC,QAAQ,CAAA;;ACnBvD,SAAS,uBAA6B,GAAA;AAC3C,EAAI,IAAA,UAAA;AAEJ,EAAA,MAAM,OAAU,GAAA,IAAI,OAAW,CAAA,CAAC,UAAU,OAAY,KAAA;AACpD,IAAa,UAAA,GAAA;AAAA,MACX,OAAS,EAAA,QAAA;AAAA,MACT,MAAQ,EAAA;AAAA,KACV;AAAA,GACD,CAAA;AAED,EAAO,OAAA,CAAC,SAAS,UAAW,CAAA;AAC9B;;AChBA,MAAM,QACJ,GAAA,gEAAA;AAEc,SAAA,UAAA,CAAW,SAAiB,EAAI,EAAA;AAC9C,EAAA,IAAI,EAAK,GAAA,EAAA;AAET,EAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,MAAA,EAAQ,CAAK,EAAA,EAAA;AAC/B,IAAM,EAAA,IAAA,QAAA,CAAS,KAAK,KAAM,CAAA,IAAA,CAAK,QAAW,GAAA,QAAA,CAAS,MAAM,CAAC,CAAA;AAAA;AAG5D,EAAO,OAAA,EAAA;AACT;;ACXO,SAAS,KAAQ,EAAkD,EAAA;AACxE,EAAA,IAAI,MAAS,GAAA,KAAA;AACb,EAAI,IAAA,MAAA;AAEJ,EAAA,OAAO,YAAa,IAAa,EAAA;AAC/B,IAAA,IAAI,QAAe,OAAA,MAAA;AAEnB,IAAS,MAAA,GAAA,IAAA;AACT,IAAS,MAAA,GAAA,EAAA,CAAG,GAAG,IAAI,CAAA;AAEnB,IAAO,OAAA,MAAA;AAAA,GACT;AACF;;ACPA,MAAM,sBAAA,uBAA6B,GAA6B,EAAA;AAEnD,MAAA,kBAAA,GAAqB,oBAE/B,oBAAoB,CAAA;AAEhB,SAAS,eAAe,WAA0B,EAAA;AACvD,EAAwB,uBAAA,EAAA;AAExB,EAAM,MAAA,EAAA,GAAK,CAAY,SAAA,EAAA,UAAA,EAAY,CAAA,CAAA;AACnC,EAAM,MAAA,gBAAA,GAAmB,IAAI,eAAgB,EAAA;AAE7C,EAAuB,sBAAA,CAAA,GAAA,CAAI,IAAI,gBAAgB,CAAA;AAG/C,EAAY,WAAA,CAAA,gBAAA,CAAiB,SAAS,MAAM;AAC1C,IAAA,kBAAA,CAAmB,IAAK,CAAA,EAAE,QAAU,EAAA,EAAA,EAAI,CAAA;AACxC,IAAA,sBAAA,CAAuB,OAAO,EAAE,CAAA;AAAA,GACjC,CAAA;AAED,EAA2B,0BAAA,CAAA,QAAA,CAAS,aAAa,EAAE,CAAA;AAEnD,EAAO,OAAA,EAAA;AACT;AAEa,MAAA,uBAAA,GAA0B,IAAK,CAAA,SAASE,wBAA0B,GAAA;AAC7E,EAAA,kBAAA,CAAmB,MAAO,CAAA,OAAO,EAAE,QAAA,EAAe,KAAA;AAChD,IAAM,MAAA,UAAA,GAAa,sBAAuB,CAAA,GAAA,CAAI,QAAQ,CAAA;AAEtD,IAAA,IAAI,CAAC,UAAY,EAAA;AAEjB,IAAA,UAAA,CAAW,KAAM,EAAA;AACjB,IAAA,sBAAA,CAAuB,OAAO,QAAQ,CAAA;AAAA,GACvC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,6BAA6B,IAAI,oBAAA;AAAA,EACrC,CAAC,cAAmB,KAAA;AAClB,IAAM,MAAA,UAAA,GAAa,sBAAuB,CAAA,GAAA,CAAI,cAAc,CAAA;AAE5D,IAAA,IAAI,CAAC,UAAY,EAAA;AAEjB,IAAA,UAAA,CAAW,KAAM,EAAA;AACjB,IAAA,sBAAA,CAAuB,OAAO,cAAc,CAAA;AAAA;AAEhD,CAAA;AAEA,SAAS,oBAAoB,QAA+B,EAAA;AAC1D,EAAwB,uBAAA,EAAA;AAExB,EAAM,MAAA,UAAA,GAAa,IAAI,eAAgB,EAAA;AAEvC,EAAuB,sBAAA,CAAA,GAAA,CAAI,UAAU,UAAU,CAAA;AAE/C,EAAA,OAAO,UAAW,CAAA,MAAA;AACpB;AAEO,MAAM,qBAA+D,GAAA;AAAA,EAC1E,YAAA,EAAc,CAAC,KAAA,KAAgC,KAAiB,YAAA,WAAA;AAAA,EAChE,SAAW,EAAA,CAAC,MAAwB,KAAA,cAAA,CAAe,MAAM,CAAA;AAAA,EACzD,WAAa,EAAA,CAAC,QAAqB,KAAA,mBAAA,CAAoB,QAAQ;AACjE,CAAA;;AC5DA,MAAMF,KAAA,GAAM,aAAa,uBAAuB,CAAA;AAEhD,MAAM,SAAA,uBAAgB,GAAsB,EAAA;AAE5C,WAAA,CAAY,MAAM;AAChB,EAAQ,OAAA,CAAA,GAAA,CAAI,WAAa,EAAA,SAAA,CAAU,IAAI,CAAA;AACzC,CAAA,EAAG,GAAI,CAAA;AAEM,MAAA,qBAAA,GAAwB,oBAElC,uBAAuB,CAAA;AAEb,MAAA,sBAAA,GAAyB,oBAMpC,wBAAwB,CAAA;AAE1B,SAAS,cAAc,QAAoB,EAAA;AACzC,EAAI,IAAA,EAAA,GAAK,CAAc,WAAA,EAAA,UAAA,EAAY,CAAA,CAAA;AAEnC,EAAI,IAAA,OAAO,WAAW,WAAa,EAAA;AACjC,IAAA,EAAA,GAAK,CAAG,EAAA,EAAE,CAAI,CAAA,EAAA,MAAA,CAAO,aAAa,SAAS,CAAA,CAAA;AAAA;AAG7C,EAAO,OAAA,EAAA;AACT;AAKA,SAAS,qBAAqB,UAAoB,EAAA;AAChD,EAAA,MAAM,CAAC,cAAgB,EAAA,WAAA,EAAa,SAAS,CAAI,GAAA,UAAA,CAAW,MAAM,GAAG,CAAA;AAErE,EAAI,IAAA,CAAC,WAAkB,OAAA,IAAA;AAEvB,EAAO,OAAA,QAAA,CAAS,WAAW,EAAE,CAAA;AAC/B;AAEO,SAAS,iBAAiB,QAAoB,EAAA;AACnD,EAA0B,yBAAA,EAAA;AAE1B,EAAM,MAAA,EAAA,GAAK,cAAsB,CAAA;AAEjC,EAAU,SAAA,CAAA,GAAA,CAAI,IAAI,QAAQ,CAAA;AAE1B,EAAO,OAAA,EAAA;AACT;AAEa,MAAA,yBAAA,GAA4B,KAAK,MAAM;AAElD,EAAA,qBAAA,CAAsB,MAAO,CAAA,OAAO,EAAE,UAAA,EAAiB,KAAA;AACrD,IAAIA,KAAA,CAAA,KAAA,CAAM,CAAoC,iCAAA,EAAA,UAAU,CAAG,CAAA,CAAA,CAAA;AAC3D,IAAA,SAAA,CAAU,OAAO,UAAU,CAAA;AAAA,GAC5B,CAAA;AAED,EAAA,sBAAA,CAAuB,MAAO,CAAA,OAAO,EAAE,UAAA,EAAY,MAAW,KAAA;AAC5D,IAAIA,KAAA,CAAA,KAAA;AAAA,MACF,qCAAqC,UAAU,CAAA,aAAA,CAAA;AAAA,MAC/C;AAAA,KACF;AACA,IAAM,MAAA,QAAA,GAAW,SAAU,CAAA,GAAA,CAAI,UAAU,CAAA;AAEzC,IAAA,IAAI,CAAC,QAAU,EAAA;AACb,MAAA,MAAM,IAAI,KAAA,CAAM,CAAa,UAAA,EAAA,UAAU,CAAa,WAAA,CAAA,CAAA;AAAA;AAGtD,IAAO,OAAA,MAAM,QAAS,CAAA,GAAG,IAAI,CAAA;AAAA,GAC9B,CAAA;AACH,CAAC,CAAA;AAED,MAAM,+BAA+B,IAAI,oBAAA;AAAA,EACvC,CAAC,gBAAqB,KAAA;AACpB,IAAsB,qBAAA,CAAA,IAAA;AAAA,MACpB,EAAE,YAAY,gBAAiB,EAAA;AAAA,MAC/B,oBAAA,CAAqB,gBAAgB,CAAK,IAAA;AAAA,KAC5C;AAAA;AAEJ,CAAA;AAEA,SAAS,sBAAsB,UAAoB,EAAA;AACjD,EAAA,eAAe,yBAAyB,IAAiB,EAAA;AACvD,IAAAA,KAAA,CAAI,KAAM,CAAA,CAAA,0BAAA,EAA6B,UAAU,CAAA,WAAA,CAAA,EAAe,IAAI,CAAA;AAEpE,IAAA,OAAO,MAAM,sBAAuB,CAAA,IAAA;AAAA,MAClC;AAAA,QACE,UAAA;AAAA,QACA;AAAA,OACF;AAAA,MACA,oBAAA,CAAqB,UAAU,CAAK,IAAA;AAAA,KACtC;AAAA;AAGF,EAA6B,4BAAA,CAAA,QAAA,CAAS,uBAAuB,UAAU,CAAA;AAEvE,EAAO,OAAA,qBAAA;AACT;AAEO,MAAM,kBAAyD,GAAA;AAAA,EACpE,YAAc,EAAA,CAAC,KAA6B,KAAA,OAAO,KAAU,KAAA,UAAA;AAAA,EAC7D,SAAW,EAAA,CAAC,QAAuB,KAAA,gBAAA,CAAiB,QAAQ,CAAA;AAAA,EAC5D,WAAa,EAAA;AACf,CAAA;;AC9GO,MAAM,eAAe,CAAC;AAC7B,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE;AACnC,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE;AACnC;AACA,IAAI,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE;AACpB,QAAQ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC;AACvC,QAAQ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC;AACvC;AACA,IAAI,QAAQ,CAAC,GAAG,EAAE;AAClB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC;AACvC;AACA,IAAI,UAAU,CAAC,KAAK,EAAE;AACtB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC;AACzC;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;AAC/B,QAAQ,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;AAC/B;AACA;;AClBO,MAAM,QAAQ,CAAC;AACtB,IAAI,WAAW,CAAC,kBAAkB,EAAE;AACpC,QAAQ,IAAI,CAAC,kBAAkB,GAAG,kBAAkB;AACpD,QAAQ,IAAI,CAAC,EAAE,GAAG,IAAI,eAAe,EAAE;AACvC;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE,UAAU,EAAE;AAChC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;AACvC,YAAY;AACZ;AACA,QAAQ,IAAI,CAAC,UAAU,EAAE;AACzB,YAAY,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;AACvD;AACA,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC;AACtC;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE;AACvB;AACA,IAAI,aAAa,CAAC,KAAK,EAAE;AACzB,QAAQ,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;AACxC;AACA,IAAI,QAAQ,CAAC,UAAU,EAAE;AACzB,QAAQ,OAAO,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC;AAC3C;AACA;;ACvBO,MAAM,aAAa,SAAS,QAAQ,CAAC;AAC5C,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;AAC1B,QAAQ,IAAI,CAAC,mBAAmB,GAAG,IAAI,GAAG,EAAE;AAC5C;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE;AAC7B,QAAQ,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AACzC,YAAY,IAAI,OAAO,CAAC,UAAU,EAAE;AACpC,gBAAgB,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,UAAU,CAAC;AACvE;AACA,YAAY,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,UAAU,CAAC;AACrD;AACA,aAAa;AACb,YAAY,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC;AAC1C;AACA;AACA,IAAI,eAAe,CAAC,KAAK,EAAE;AAC3B,QAAQ,OAAO,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,KAAK,CAAC;AAClD;AACA;;ACpBA,SAAS,WAAW,CAAC,MAAM,EAAE;AAC7B,IAAI,IAAI,QAAQ,IAAI,MAAM,EAAE;AAC5B;AACA,QAAQ,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;AACpC;AACA,IAAI,MAAM,MAAM,GAAG,EAAE;AACrB;AACA,IAAI,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE;AAC9B,QAAQ,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;AACxC,YAAY,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACpC;AACA;AACA,IAAI,OAAO,MAAM;AACjB;AACO,SAAS,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE;AACxC,IAAI,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;AACtC,IAAI,IAAI,MAAM,IAAI,MAAM,EAAE;AAC1B;AACA,QAAQ,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;AACrC;AACA,IAAI,MAAM,cAAc,GAAG,MAAM;AACjC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpD,QAAQ,MAAM,KAAK,GAAG,cAAc,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;AAC9B,YAAY,OAAO,KAAK;AACxB;AACA;AACA,IAAI,OAAO,SAAS;AACpB;AACO,SAAS,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE;AACrC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACrE;AACO,SAAS,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE;AACrC,IAAI,OAAO,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE;AACpC;AACO,SAAS,OAAO,CAAC,MAAM,EAAE,SAAS,EAAE;AAC3C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C,QAAQ,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;AAC/B,QAAQ,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;AAC9B,YAAY,OAAO,KAAK;AACxB;AACA;AACA,IAAI,OAAO,SAAS;AACpB;;AC1CO,MAAM,yBAAyB,CAAC;AACvC,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,WAAW,GAAG,EAAE;AAC7B;AACA,IAAI,QAAQ,CAAC,WAAW,EAAE;AAC1B,QAAQ,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW;AACxD;AACA,IAAI,cAAc,CAAC,CAAC,EAAE;AACtB,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,IAAI,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACjF;AACA,IAAI,UAAU,CAAC,IAAI,EAAE;AACrB,QAAQ,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;AACrC;AACA;;ACdA,MAAMG,SAAO,GAAG,CAAC,OAAO,KAAK,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AAC1E,MAAM,WAAW,GAAG,CAAC,OAAO,KAAK,OAAO,OAAO,KAAK,WAAW;AAC/D,MAAM,MAAM,GAAG,CAAC,OAAO,KAAK,OAAO,KAAK,IAAI;AAC5C,MAAMC,eAAa,GAAG,CAAC,OAAO,KAAK;AAC1C,IAAI,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,KAAK,IAAI;AACvD,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,OAAO,KAAK,MAAM,CAAC,SAAS;AACpC,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,IAAI;AAC/C,QAAQ,OAAO,IAAI;AACnB,IAAI,OAAO,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,MAAM,CAAC,SAAS;AAC9D,CAAC;AACM,MAAM,aAAa,GAAG,CAAC,OAAO,KAAKA,eAAa,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC;AAC9F,MAAMC,SAAO,GAAG,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC;AACnD,MAAM,QAAQ,GAAG,CAAC,OAAO,KAAK,OAAO,OAAO,KAAK,QAAQ;AACzD,MAAM,QAAQ,GAAG,CAAC,OAAO,KAAK,OAAO,OAAO,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;AAC5E,MAAM,SAAS,GAAG,CAAC,OAAO,KAAK,OAAO,OAAO,KAAK,SAAS;AAC3D,MAAM,QAAQ,GAAG,CAAC,OAAO,KAAK,OAAO,YAAY,MAAM;AACvD,MAAM,KAAK,GAAG,CAAC,OAAO,KAAK,OAAO,YAAY,GAAG;AACjD,MAAM,KAAK,GAAG,CAAC,OAAO,KAAK,OAAO,YAAY,GAAG;AACjD,MAAM,QAAQ,GAAG,CAAC,OAAO,KAAKF,SAAO,CAAC,OAAO,CAAC,KAAK,QAAQ;AAC3D,MAAM,MAAM,GAAG,CAAC,OAAO,KAAK,OAAO,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;AAChF,MAAM,OAAO,GAAG,CAAC,OAAO,KAAK,OAAO,YAAY,KAAK;AACrD,MAAM,UAAU,GAAG,CAAC,OAAO,KAAK,OAAO,OAAO,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC;AAC7E,MAAM,WAAW,GAAG,CAAC,OAAO,KAAK,SAAS,CAAC,OAAO,CAAC;AAC1D,IAAI,MAAM,CAAC,OAAO,CAAC;AACnB,IAAI,WAAW,CAAC,OAAO,CAAC;AACxB,IAAI,QAAQ,CAAC,OAAO,CAAC;AACrB,IAAI,QAAQ,CAAC,OAAO,CAAC;AACrB,IAAI,QAAQ,CAAC,OAAO,CAAC;AACd,MAAM,QAAQ,GAAG,CAAC,OAAO,KAAK,OAAO,OAAO,KAAK,QAAQ;AACzD,MAAM,UAAU,GAAG,CAAC,OAAO,KAAK,OAAO,KAAK,QAAQ,IAAI,OAAO,KAAK,CAAC,QAAQ;AAC7E,MAAM,YAAY,GAAG,CAAC,OAAO,KAAK,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,YAAY,QAAQ,CAAC;AAC/F,MAAM,KAAK,GAAG,CAAC,OAAO,KAAK,OAAO,YAAY,GAAG;;ACjCjD,MAAM,SAAS,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;AACpD,MAAM,aAAa,GAAG,CAAC,IAAI,KAAK;AACvC,KAAK,GAAG,CAAC,MAAM;AACf,KAAK,GAAG,CAAC,SAAS;AAClB,KAAK,IAAI,CAAC,GAAG,CAAC;AACP,MAAM,SAAS,GAAG,CAAC,MAAM,KAAK;AACrC,IAAI,MAAM,MAAM,GAAG,EAAE;AACrB,IAAI,IAAI,OAAO,GAAG,EAAE;AACpB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AACnC,QAAQ,MAAM,YAAY,GAAG,IAAI,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC1E,QAAQ,IAAI,YAAY,EAAE;AAC1B,YAAY,OAAO,IAAI,GAAG;AAC1B,YAAY,CAAC,EAAE;AACf,YAAY;AACZ;AACA,QAAQ,MAAM,cAAc,GAAG,IAAI,KAAK,GAAG;AAC3C,QAAQ,IAAI,cAAc,EAAE;AAC5B,YAAY,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;AAChC,YAAY,OAAO,GAAG,EAAE;AACxB,YAAY;AACZ;AACA,QAAQ,OAAO,IAAI,IAAI;AACvB;AACA,IAAI,MAAM,WAAW,GAAG,OAAO;AAC/B,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;AAC5B,IAAI,OAAO,MAAM;AACjB,CAAC;;ACzBD,SAAS,oBAAoB,CAAC,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE;AAChF,IAAI,OAAO;AACX,QAAQ,YAAY;AACpB,QAAQ,UAAU;AAClB,QAAQ,SAAS;AACjB,QAAQ,WAAW;AACnB,KAAK;AACL;AACA,MAAM,WAAW,GAAG;AACpB,IAAI,oBAAoB,CAAC,WAAW,EAAE,WAAW,EAAE,MAAM,IAAI,EAAE,MAAM,SAAS,CAAC;AAC/E,IAAI,oBAAoB,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI;AACrE,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AAC3C,YAAY,OAAO,MAAM,CAAC,CAAC,CAAC;AAC5B;AACA,QAAQ,OAAO,CAAC,KAAK,CAAC,+BAA+B,CAAC;AACtD,QAAQ,OAAO,CAAC;AAChB,KAAK,CAAC;AACN,IAAI,oBAAoB,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AAChF,IAAI,oBAAoB,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,SAAS,KAAK;AAC7D,QAAQ,MAAM,SAAS,GAAG;AAC1B,YAAY,IAAI,EAAE,CAAC,CAAC,IAAI;AACxB,YAAY,OAAO,EAAE,CAAC,CAAC,OAAO;AAC9B,SAAS;AACT,QAAQ,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,IAAI;AACpD,YAAY,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;AACrC,SAAS,CAAC;AACV,QAAQ,OAAO,SAAS;AACxB,KAAK,EAAE,CAAC,CAAC,EAAE,SAAS,KAAK;AACzB,QAAQ,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC;AACtC,QAAQ,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI;AACvB,QAAQ,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK;AACzB,QAAQ,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,IAAI;AACpD,YAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;AAC7B,SAAS,CAAC;AACV,QAAQ,OAAO,CAAC;AAChB,KAAK,CAAC;AACN,IAAI,oBAAoB,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,KAAK,IAAI;AACnE,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AAC3D,QAAQ,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC7D,QAAQ,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC;AACtC,KAAK,CAAC;AACN,IAAI,oBAAoB,CAAC,KAAK,EAAE,KAAK;AACrC;AACA;AACA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AAC1C,IAAI,oBAAoB,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AAC9E,IAAI,oBAAoB,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,IAAI;AAC/E,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE;AAC3B,YAAY,OAAO,KAAK;AACxB;AACA,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE;AACnB,YAAY,OAAO,UAAU;AAC7B;AACA,aAAa;AACb,YAAY,OAAO,WAAW;AAC9B;AACA,KAAK,EAAE,MAAM,CAAC;AACd,IAAI,oBAAoB,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM;AAChF,QAAQ,OAAO,IAAI;AACnB,KAAK,EAAE,MAAM,CAAC;AACd,IAAI,oBAAoB,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC;AACD,SAAS,uBAAuB,CAAC,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE;AACnF,IAAI,OAAO;AACX,QAAQ,YAAY;AACpB,QAAQ,UAAU;AAClB,QAAQ,SAAS;AACjB,QAAQ,WAAW;AACnB,KAAK;AACL;AACA,MAAM,UAAU,GAAG,uBAAuB,CAAC,CAAC,CAAC,EAAE,SAAS,KAAK;AAC7D,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;AACrB,QAAQ,MAAM,YAAY,GAAG,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;AACxE,QAAQ,OAAO,YAAY;AAC3B;AACA,IAAI,OAAO,KAAK;AAChB,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,KAAK;AACrB,IAAI,MAAM,UAAU,GAAG,SAAS,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;AAChE,IAAI,OAAO,CAAC,QAAQ,EAAE,UAAU,CAAC;AACjC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,KAAK;AAC5C,IAAI,MAAM,KAAK,GAAG,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC;AAC/D;AACA,IAAI,OAAO,KAAK;AAChB,CAAC,CAAC;AACF,MAAM,iBAAiB,GAAG;AAC1B,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,WAAW;AACf,IAAI,UAAU;AACd,IAAI,WAAW;AACf,IAAI,YAAY;AAChB,IAAI,YAAY;AAChB,IAAI,iBAAiB;AACrB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,KAAK;AACxB,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI;AACzB,IAAI,OAAO,GAAG;AACd,CAAC,EAAE,EAAE,CAAC;AACN,MAAM,cAAc,GAAG,uBAAuB,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK;AAC9H,IAAI,MAAM,IAAI,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,IAAI,IAAI,CAAC,IAAI,EAAE;AACf,QAAQ,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC;AACpE;AACA,IAAI,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC;AACK,SAAS,2BAA2B,CAAC,cAAc,EAAE,SAAS,EAAE;AACvE,IAAI,IAAI,cAAc,EAAE,WAAW,EAAE;AACrC,QAAQ,MAAM,YAAY,GAAG,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,aAAa,CAAC,cAAc,CAAC,WAAW,CAAC;AAChG,QAAQ,OAAO,YAAY;AAC3B;AACA,IAAI,OAAO,KAAK;AAChB;AACA,MAAM,SAAS,GAAG,uBAAuB,CAAC,2BAA2B,EAAE,CAAC,KAAK,EAAE,SAAS,KAAK;AAC7F,IAAI,MAAM,UAAU,GAAG,SAAS,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,CAAC;AAC/E,IAAI,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC;AAChC,CAAC,EAAE,CAAC,KAAK,EAAE,SAAS,KAAK;AACzB,IAAI,MAAM,YAAY,GAAG,SAAS,CAAC,aAAa,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC;AACnF,IAAI,IAAI,CAAC,YAAY,EAAE;AACvB,QAAQ,OAAO,EAAE,GAAG,KAAK,EAAE;AAC3B;AACA,IAAI,MAAM,MAAM,GAAG,EAAE;AACrB,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI;AACjC,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC;AAClC,KAAK,CAAC;AACN,IAAI,OAAO,MAAM;AACjB,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,KAAK;AACxB,IAAI,MAAM,KAAK,GAAG,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,qCAAqC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,iFAAiF,CAAC,CAAC;AACxJ;AACA,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;AAC3D,CAAC,CAAC;AACF,MAAM,UAAU,GAAG,uBAAuB,CAAC,CAAC,KAAK,EAAE,SAAS,KAAK;AACjE,IAAI,OAAO,CAAC,CAAC,SAAS,CAAC,yBAAyB,CAAC,cAAc,CAAC,KAAK,CAAC;AACtE,CAAC,EAAE,CAAC,KAAK,EAAE,SAAS,KAAK;AACzB,IAAI,MAAM,WAAW,GAAG,SAAS,CAAC,yBAAyB,CAAC,cAAc,CAAC,KAAK,CAAC;AACjF,IAAI,OAAO,CAAC,QAAQ,EAAE,WAAW,CAAC,IAAI,CAAC;AACvC,CAAC,EAAE,CAAC,KAAK,EAAE,SAAS,KAAK;AACzB,IAAI,MAAM,WAAW,GAAG,SAAS,CAAC,yBAAyB,CAAC,cAAc,CAAC,KAAK,CAAC;AACjF,IAAI,OAAO,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC;AACvC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,KAAK;AACxB,IAAI,MAAM,WAAW,GAAG,SAAS,CAAC,yBAAyB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,IAAI,IAAI,CAAC,WAAW,EAAE;AACtB,QAAQ,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;AACrE;AACA,IAAI,OAAO,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC;AACF,MAAM,cAAc,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,cAAc,CAAC;AACnE,MAAM,cAAc,GAAG,CAAC,KAAK,EAAE,SAAS,KAAK;AACpD,IAAI,MAAM,uBAAuB,GAAG,OAAO,CAAC,cAAc,EAAE,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AACxG,IAAI,IAAI,uBAAuB,EAAE;AACjC,QAAQ,OAAO;AACf,YAAY,KAAK,EAAE,uBAAuB,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC;AACtE,YAAY,IAAI,EAAE,uBAAuB,CAAC,UAAU,CAAC,KAAK,EAAE,SAAS,CAAC;AACtE,SAAS;AACT;AACA,IAAI,MAAM,oBAAoB,GAAG,OAAO,CAAC,WAAW,EAAE,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AAClG,IAAI,IAAI,oBAAoB,EAAE;AAC9B,QAAQ,OAAO;AACf,YAAY,KAAK,EAAE,oBAAoB,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC;AACnE,YAAY,IAAI,EAAE,oBAAoB,CAAC,UAAU;AACjD,SAAS;AACT;AACA,IAAI,OAAO,SAAS;AACpB,CAAC;AACD,MAAM,uBAAuB,GAAG,EAAE;AAClC,WAAW,CAAC,OAAO,CAAC,IAAI,IAAI;AAC5B,IAAI,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI;AACnD,CAAC,CAAC;AACK,MAAM,gBAAgB,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,KAAK;AAC3D,IAAI,IAAIE,SAAO,CAAC,IAAI,CAAC,EAAE;AACvB,QAAQ,QAAQ,IAAI,CAAC,CAAC,CAAC;AACvB,YAAY,KAAK,QAAQ;AACzB,gBAAgB,OAAO,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC;AACpE,YAAY,KAAK,OAAO;AACxB,gBAAgB,OAAO,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC;AACnE,YAAY,KAAK,QAAQ;AACzB,gBAAgB,OAAO,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC;AACpE,YAAY,KAAK,aAAa;AAC9B,gBAAgB,OAAO,cAAc,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC;AACxE,YAAY;AACZ,gBAAgB,MAAM,IAAI,KAAK,CAAC,0BAA0B,GAAG,IAAI,CAAC;AAClE;AACA;AACA,SAAS;AACT,QAAQ,MAAM,cAAc,GAAG,uBAAuB,CAAC,IAAI,CAAC;AAC5D,QAAQ,IAAI,CAAC,cAAc,EAAE;AAC7B,YAAY,MAAM,IAAI,KAAK,CAAC,0BAA0B,GAAG,IAAI,CAAC;AAC9D;AACA,QAAQ,OAAO,cAAc,CAAC,WAAW,CAAC,IAAI,EAAE,SAAS,CAAC;AAC1D;AACA,CAAC;;ACjMD,MAAM,SAAS,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK;AAChC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI;AACtB,QAAQ,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC;AAC9C,IAAI,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE;AAC7B,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;AAClB,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,QAAQ,CAAC,EAAE;AACX;AACA,IAAI,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK;AAC5B,CAAC;AACD,SAAS,YAAY,CAAC,IAAI,EAAE;AAC5B,IAAI,IAAI,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE;AACrC,QAAQ,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC;AACjE;AACA,IAAI,IAAI,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE;AACrC,QAAQ,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC;AACjE;AACA,IAAI,IAAI,QAAQ,CAAC,IAAI,EAAE,aAAa,CAAC,EAAE;AACvC,QAAQ,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC;AACnE;AACA;AACO,MAAM,OAAO,GAAG,CAAC,MAAM,EAAE,IAAI,KAAK;AACzC,IAAI,YAAY,CAAC,IAAI,CAAC;AACtB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;AAC3B,QAAQ,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;AAC3B,YAAY,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC;AAC5C;AACA,aAAa,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;AAChC,YAAY,MAAM,GAAG,GAAG,CAAC,GAAG;AAC5B,YAAY,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,OAAO;AAC3D,YAAY,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC;AACnD,YAAY,QAAQ,IAAI;AACxB,gBAAgB,KAAK,KAAK;AAC1B,oBAAoB,MAAM,GAAG,QAAQ;AACrC,oBAAoB;AACpB,gBAAgB,KAAK,OAAO;AAC5B,oBAAoB,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC;AACjD,oBAAoB;AACpB;AACA;AACA,aAAa;AACb,YAAY,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;AAChC;AACA;AACA,IAAI,OAAO,MAAM;AACjB,CAAC;AACM,MAAM,OAAO,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,KAAK;AACjD,IAAI,YAAY,CAAC,IAAI,CAAC;AACtB,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AAC3B,QAAQ,OAAO,MAAM,CAAC,MAAM,CAAC;AAC7B;AACA,IAAI,IAAI,MAAM,GAAG,MAAM;AACvB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;AAC3B,QAAQ,IAAIA,SAAO,CAAC,MAAM,CAAC,EAAE;AAC7B,YAAY,MAAM,KAAK,GAAG,CAAC,GAAG;AAC9B,YAAY,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;AAClC;AACA,aAAa,IAAID,eAAa,CAAC,MAAM,CAAC,EAAE;AACxC,YAAY,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;AAChC;AACA,aAAa,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;AAChC,YAAY,MAAM,GAAG,GAAG,CAAC,GAAG;AAC5B,YAAY,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC;AAC3C;AACA,aAAa,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;AAChC,YAAY,MAAM,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC;AAC/C,YAAY,IAAI,KAAK,EAAE;AACvB,gBAAgB;AAChB;AACA,YAAY,MAAM,GAAG,GAAG,CAAC,GAAG;AAC5B,YAAY,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,OAAO;AAC3D,YAAY,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC;AACnD,YAAY,QAAQ,IAAI;AACxB,gBAAgB,KAAK,KAAK;AAC1B,oBAAoB,MAAM,GAAG,QAAQ;AACrC,oBAAoB;AACpB,gBAAgB,KAAK,OAAO;AAC5B,oBAAoB,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC;AACjD,oBAAoB;AACpB;AACA;AACA;AACA,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACzC,IAAI,IAAIC,SAAO,CAAC,MAAM,CAAC,EAAE;AACzB,QAAQ,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC;AACnD;AACA,SAAS,IAAID,eAAa,CAAC,MAAM,CAAC,EAAE;AACpC,QAAQ,MAAM,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACjD;AACA,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;AACvB,QAAQ,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;AACpD,QAAQ,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AACzC,QAAQ,IAAI,QAAQ,KAAK,QAAQ,EAAE;AACnC,YAAY,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;AACnC,YAAY,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC;AAChC;AACA;AACA,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;AACvB,QAAQ,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAC1C,QAAQ,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC;AAC/C,QAAQ,MAAM,IAAI,GAAG,CAAC,OAAO,KAAK,CAAC,GAAG,KAAK,GAAG,OAAO;AACrD,QAAQ,QAAQ,IAAI;AACpB,YAAY,KAAK,KAAK,EAAE;AACxB,gBAAgB,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC/C,gBAAgB,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACxD,gBAAgB,IAAI,MAAM,KAAK,QAAQ,EAAE;AACzC,oBAAoB,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;AAC3C;AACA,gBAAgB;AAChB;AACA,YAAY,KAAK,OAAO,EAAE;AAC1B,gBAAgB,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;AAClE,gBAAgB;AAChB;AACA;AACA;AACA,IAAI,OAAO,MAAM;AACjB,CAAC;;ACnHD,SAAS,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,GAAG,EAAE,EAAE;AAC7C,IAAI,IAAI,CAAC,IAAI,EAAE;AACf,QAAQ;AACR;AACA,IAAI,IAAI,CAACC,SAAO,CAAC,IAAI,CAAC,EAAE;AACxB,QAAQ,OAAO,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,KAAK,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAClG,QAAQ;AACR;AACA,IAAI,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,IAAI;AACtC,IAAI,IAAI,QAAQ,EAAE;AAClB,QAAQ,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,GAAG,KAAK;AAC1C,YAAY,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;AACnE,SAAS,CAAC;AACV;AACA,IAAI,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC;AAC7B;AACO,SAAS,qBAAqB,CAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE;AACrE,IAAI,QAAQ,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,IAAI,KAAK;AAC1C,QAAQ,KAAK,GAAG,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,IAAI,gBAAgB,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AAC/E,KAAK,CAAC;AACN,IAAI,OAAO,KAAK;AAChB;AACO,SAAS,mCAAmC,CAAC,KAAK,EAAE,WAAW,EAAE;AACxE,IAAI,SAAS,KAAK,CAAC,cAAc,EAAE,IAAI,EAAE;AACzC,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;AACtD,QAAQ,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,mBAAmB,IAAI;AACrE,YAAY,KAAK,GAAG,OAAO,CAAC,KAAK,EAAE,mBAAmB,EAAE,MAAM,MAAM,CAAC;AACrE,SAAS,CAAC;AACV;AACA,IAAI,IAAIA,SAAO,CAAC,WAAW,CAAC,EAAE;AAC9B,QAAQ,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,WAAW;AACzC,QAAQ,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI;AACtC,YAAY,KAAK,GAAG,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,aAAa,CAAC,EAAE,MAAM,KAAK,CAAC;AACzE,SAAS,CAAC;AACV,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;AACjC;AACA;AACA,SAAS;AACT,QAAQ,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC;AACnC;AACA,IAAI,OAAO,KAAK;AAChB;AACA,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,SAAS,KAAKD,eAAa,CAAC,MAAM,CAAC;AAC3D,IAAIC,SAAO,CAAC,MAAM,CAAC;AACnB,IAAI,KAAK,CAAC,MAAM,CAAC;AACjB,IAAI,KAAK,CAAC,MAAM,CAAC;AACjB,IAAI,2BAA2B,CAAC,MAAM,EAAE,SAAS,CAAC;AAClD,SAAS,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE;AAC/C,IAAI,MAAM,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC;AAC9C,IAAI,IAAI,WAAW,EAAE;AACrB,QAAQ,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;AAC9B;AACA,SAAS;AACT,QAAQ,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC;AACtC;AACA;AACO,SAAS,sCAAsC,CAAC,WAAW,EAAE,MAAM,EAAE;AAC5E,IAAI,MAAM,MAAM,GAAG,EAAE;AACrB,IAAI,IAAI,iBAAiB,GAAG,SAAS;AACrC,IAAI,WAAW,CAAC,OAAO,CAAC,KAAK,IAAI;AACjC,QAAQ,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;AAC/B,YAAY;AACZ;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,MAAM,EAAE;AACrB,YAAY,KAAK,GAAG;AACpB,iBAAiB,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;AAC7C,iBAAiB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;AACpD;AACA,QAAQ,MAAM,CAAC,kBAAkB,EAAE,GAAG,cAAc,CAAC,GAAG,KAAK;AAC7D,QAAQ,IAAI,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE;AAC7C,YAAY,iBAAiB,GAAG,cAAc,CAAC,GAAG,CAAC,aAAa,CAAC;AACjE;AACA,aAAa;AACb,YAAY,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,aAAa,CAAC;AACzF;AACA,KAAK,CAAC;AACN,IAAI,IAAI,iBAAiB,EAAE;AAC3B,QAAQ,IAAI,aAAa,CAAC,MAAM,CAAC,EAAE;AACnC,YAAY,OAAO,CAAC,iBAAiB,CAAC;AACtC;AACA,aAAa;AACb,YAAY,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC;AAC9C;AACA;AACA,SAAS;AACT,QAAQ,OAAO,aAAa,CAAC,MAAM,CAAC,GAAG,SAAS,GAAG,MAAM;AACzD;AACA;AACO,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,GAAG,EAAE,EAAE,iBAAiB,GAAG,EAAE,EAAE,WAAW,GAAG,IAAI,GAAG,EAAE,KAAK;AAC7H,IAAI,MAAM,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC;AACzC,IAAI,IAAI,CAAC,SAAS,EAAE;AACpB,QAAQ,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC;AAC7C,QAAQ,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC;AAC5C,QAAQ,IAAI,IAAI,EAAE;AAClB;AACA,YAAY,OAAO;AACnB,kBAAkB;AAClB,oBAAoB,gBAAgB,EAAE,IAAI;AAC1C;AACA,kBAAkB,IAAI;AACtB;AACA;AACA,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE;AACpC,QAAQ,MAAM,WAAW,GAAG,cAAc,CAAC,MAAM,EAAE,SAAS,CAAC;AAC7D,QAAQ,MAAM,MAAM,GAAG;AACvB,cAAc;AACd,gBAAgB,gBAAgB,EAAE,WAAW,CAAC,KAAK;AACnD,gBAAgB,WAAW,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC;AAC/C;AACA,cAAc;AACd,gBAAgB,gBAAgB,EAAE,MAAM;AACxC,aAAa;AACb,QAAQ,IAAI,CAAC,SAAS,EAAE;AACxB,YAAY,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC;AAC3C;AACA,QAAQ,OAAO,MAAM;AACrB;AACA,IAAI,IAAI,QAAQ,CAAC,iBAAiB,EAAE,MAAM,CAAC,EAAE;AAC7C;AACA,QAAQ,OAAO;AACf,YAAY,gBAAgB,EAAE,IAAI;AAClC,SAAS;AACT;AACA,IAAI,MAAM,oBAAoB,GAAG,cAAc,CAAC,MAAM,EAAE,SAAS,CAAC;AAClE,IAAI,MAAM,WAAW,GAAG,oBAAoB,EAAE,KAAK,IAAI,MAAM;AAC7D,IAAI,MAAM,gBAAgB,GAAGA,SAAO,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;AAC3D,IAAI,MAAM,gBAAgB,GAAG,EAAE;AAC/B,IAAI,OAAO,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK;AAC3C,QAAQ,IAAI,KAAK,KAAK,WAAW;AACjC,YAAY,KAAK,KAAK,aAAa;AACnC,YAAY,KAAK,KAAK,WAAW,EAAE;AACnC,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,kBAAkB,EAAE,KAAK,CAAC,wEAAwE,CAAC,CAAC;AACjI;AACA,QAAQ,MAAM,eAAe,GAAG,MAAM,CAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,iBAAiB,EAAE,MAAM,CAAC,EAAE,WAAW,CAAC;AAC3I,QAAQ,gBAAgB,CAAC,KAAK,CAAC,GAAG,eAAe,CAAC,gBAAgB;AAClE,QAAQ,IAAIA,SAAO,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE;AAClD,YAAY,gBAAgB,CAAC,KAAK,CAAC,GAAG,eAAe,CAAC,WAAW;AACjE;AACA,aAAa,IAAID,eAAa,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE;AAC7D,YAAY,OAAO,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,GAAG,KAAK;AAChE,gBAAgB,gBAAgB,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI;AACrE,aAAa,CAAC;AACd;AACA,KAAK,CAAC;AACN,IAAI,MAAM,MAAM,GAAG,aAAa,CAAC,gBAAgB;AACjD,UAAU;AACV,YAAY,gBAAgB;AAC5B,YAAY,WAAW,EAAE,CAAC,CAAC;AAC3B,kBAAkB,CAAC,oBAAoB,CAAC,IAAI;AAC5C,kBAAkB,SAAS;AAC3B;AACA,UAAU;AACV,YAAY,gBAAgB;AAC5B,YAAY,WAAW,EAAE,CAAC,CAAC;AAC3B,kBAAkB,CAAC,oBAAoB,CAAC,IAAI,EAAE,gBAAgB;AAC9D,kBAAkB,gBAAgB;AAClC,SAAS;AACT,IAAI,IAAI,CAAC,SAAS,EAAE;AACpB,QAAQ,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC;AACvC;AACA,IAAI,OAAO,MAAM;AACjB,CAAC;;AC3KD,SAAS,OAAO,CAAC,OAAO,EAAE;AAC1B,EAAE,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AAC7D;;AAMA,SAAS,OAAO,CAAC,OAAO,EAAE;AAC1B,EAAE,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,OAAO;AACrC;;AAkBA,SAAS,aAAa,CAAC,OAAO,EAAE;AAChC,EAAE,IAAI,OAAO,CAAC,OAAO,CAAC,KAAK,QAAQ;AACnC,IAAI,OAAO,KAAK;AAChB,EAAE,MAAM,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC;AAClD,EAAE,OAAO,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,WAAW,KAAK,MAAM,IAAI,SAAS,KAAK,MAAM,CAAC,SAAS;AAC1F;;AC/BA,SAAS,UAAU,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,cAAc,EAAE,oBAAoB,EAAE;AAC9E,EAAE,MAAM,QAAQ,GAAG,EAAE,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,GAAG,YAAY,GAAG,eAAe;AACrG,EAAE,IAAI,QAAQ,KAAK,YAAY;AAC/B,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM;AACvB,EAAE,IAAI,oBAAoB,IAAI,QAAQ,KAAK,eAAe,EAAE;AAC5D,IAAI,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE;AACtC,MAAM,KAAK,EAAE,MAAM;AACnB,MAAM,UAAU,EAAE,KAAK;AACvB,MAAM,QAAQ,EAAE,IAAI;AACpB,MAAM,YAAY,EAAE;AACpB,KAAK,CAAC;AACN;AACA;AACA,SAAS,IAAI,CAAC,MAAM,EAAE,OAAO,GAAG,EAAE,EAAE;AACpC,EAAE,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;AACvB,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACpD;AACA,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;AAC9B,IAAI,OAAO,MAAM;AACjB;AACA,EAAE,MAAM,KAAK,GAAG,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC;AAClD,EAAE,MAAM,OAAO,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC;AACtD,EAAE,OAAO,CAAC,GAAG,KAAK,EAAE,GAAG,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,GAAG,KAAK;AACvD,IAAI,IAAI,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AAChE,MAAM,OAAO,KAAK;AAClB;AACA,IAAI,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAC3B,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC;AACrC,IAAI,UAAU,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,aAAa,CAAC;AACjE,IAAI,OAAO,KAAK;AAChB,GAAG,EAAE,EAAE,CAAC;AACR;;AC5Be,MAAM,SAAS,CAAC;AAC/B;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,MAAM,GAAG,KAAK,GAAG,GAAG,EAAE,EAAE;AAC1C,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,EAAE;AAChD,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,IAAI,EAAE,CAAC;AACpE,QAAQ,IAAI,CAAC,yBAAyB,GAAG,IAAI,yBAAyB,EAAE;AACxE,QAAQ,IAAI,CAAC,iBAAiB,GAAG,EAAE;AACnC,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B;AACA,IAAI,SAAS,CAAC,MAAM,EAAE;AACtB,QAAQ,MAAM,UAAU,GAAG,IAAI,GAAG,EAAE;AACpC,QAAQ,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC;AACpE,QAAQ,MAAM,GAAG,GAAG;AACpB,YAAY,IAAI,EAAE,MAAM,CAAC,gBAAgB;AACzC,SAAS;AACT,QAAQ,IAAI,MAAM,CAAC,WAAW,EAAE;AAChC,YAAY,GAAG,CAAC,IAAI,GAAG;AACvB,gBAAgB,GAAG,GAAG,CAAC,IAAI;AAC3B,gBAAgB,MAAM,EAAE,MAAM,CAAC,WAAW;AAC1C,aAAa;AACb;AACA,QAAQ,MAAM,mBAAmB,GAAG,sCAAsC,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC;AACnG,QAAQ,IAAI,mBAAmB,EAAE;AACjC,YAAY,GAAG,CAAC,IAAI,GAAG;AACvB,gBAAgB,GAAG,GAAG,CAAC,IAAI;AAC3B,gBAAgB,qBAAqB,EAAE,mBAAmB;AAC1D,aAAa;AACb;AACA,QAAQ,OAAO,GAAG;AAClB;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,OAAO;AACtC,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;AAC/B,QAAQ,IAAI,IAAI,EAAE,MAAM,EAAE;AAC1B,YAAY,MAAM,GAAG,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC;AACrE;AACA,QAAQ,IAAI,IAAI,EAAE,qBAAqB,EAAE;AACzC,YAAY,MAAM,GAAG,mCAAmC,CAAC,MAAM,EAAE,IAAI,CAAC,qBAAqB,CAAC;AAC5F;AACA,QAAQ,OAAO,MAAM;AACrB;AACA,IAAI,SAAS,CAAC,MAAM,EAAE;AACtB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACrD;AACA,IAAI,KAAK,CAAC,MAAM,EAAE;AAClB,QAAQ,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACnD;AACA,IAAI,aAAa,CAAC,CAAC,EAAE,OAAO,EAAE;AAC9B,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC;AAC/C;AACA,IAAI,cAAc,CAAC,CAAC,EAAE,UAAU,EAAE;AAClC,QAAQ,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,UAAU,CAAC;AACnD;AACA,IAAI,cAAc,CAAC,WAAW,EAAE,IAAI,EAAE;AACtC,QAAQ,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC;AAChD,YAAY,IAAI;AAChB,YAAY,GAAG,WAAW;AAC1B,SAAS,CAAC;AACV;AACA,IAAI,eAAe,CAAC,GAAG,KAAK,EAAE;AAC9B,QAAQ,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;AAC7C;AACA;AACA,SAAS,CAAC,eAAe,GAAG,IAAI,SAAS,EAAE;AAC3C,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;AACzF,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;AAC7F,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;AACzF,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;AACjF,SAAS,CAAC,aAAa,GAAG,SAAS,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;AACjG,SAAS,CAAC,cAAc,GAAG,SAAS,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;AACnG,SAAS,CAAC,cAAc,GAAG,SAAS,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;AACnG,SAAS,CAAC,eAAe,GAAG,SAAS,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;;ACvErG,MAAMJ,KAAA,GAAM,aAAa,wBAAwB,CAAA;AAEpC,MAAA,gBAAA,GAAmB,IAAI,SAAU,EAAA;AAEjC,MAAA,0BAAA,GAA6B,KAAK,MAAM;AACnD,EAAAA,KAAA,CAAI,MAAM,8BAA8B,CAAA;AACxC,EAA0B,yBAAA,EAAA;AAC1B,EAAwB,uBAAA,EAAA;AAC1B,CAAC,CAAA;AAED,gBAAiB,CAAA,cAAA,CAAe,oBAAoB,sBAAsB,CAAA;AAC1E,gBAAiB,CAAA,cAAA;AAAA,EACf,qBAAA;AAAA,EACA;AACF,CAAA;;ACrBO,SAAS,kBAAkB,IAAc,EAAA;AAC9C,EAAA,OAAO,gBAAgB,IAAI,CAAA,CAAA;AAC7B;;ACCa,MAAA,gBAAA,GAAmB,KAAK,MAAM;AACzC,EAA2B,0BAAA,EAAA;AAC7B,CAAC,CAAA;;ACiBD,MAAMA,KAAA,GAAM,aAAa,uBAAuB,CAAA;AAEhD,MAAM,eAAA,uBAAsB,GAAoC,EAAA;AAEhE,SAAS,uCAA0C,GAAA;AACjD,EAAAA,KAAA,CAAI,MAAM,6CAA6C,CAAA;AAE/C,EAAAM,gBAAA,CAAA,MAAA;AAAA,IACN,kBAAkB,eAAe,CAAA;AAAA,IACjC,CAAC,QAAQ,OAA2B,KAAA;AAClC,MAAA,MAAM,SAAS,gBAAiB,CAAA,WAAA;AAAA,QAC9B,OAAQ,CAAA;AAAA,OACV;AAEA,MAAA,MAAM,wBAA2B,GAAA,eAAA,CAAgB,GAAI,CAAA,MAAA,CAAO,SAAS,CAAA;AAErE,MAAA,IAAI,CAAC,wBAA0B,EAAA;AAC7B,QAAA,MAAM,IAAI,KAAA;AAAA,UACR,CAAA,mCAAA,EAAsC,OAAO,SAAS,CAAA;AAAA,SACxD;AAAA;AAGc,MAAA,eAAA,CAAA,MAAA,CAAO,OAAO,SAAS,CAAA;AAEnC,MAAA,IAAA,MAAA,CAAO,SAAS,SAAW,EAAA;AACJ,QAAA,wBAAA,CAAA,OAAA,CAAQ,OAAO,MAAM,CAAA;AAAA,OACzC,MAAA;AACoB,QAAA,wBAAA,CAAA,MAAA,CAAO,OAAO,KAAK,CAAA;AAAA;AAC9C;AACF,GACF;AAEmB,EAAA,kBAAA,CAAA;AAAA,IACjB,MAAM,IAAA,CAAW,IAAc,EAAA,OAAA,EAAY,KAAe,EAAA;AACxD,MAAA,IAAI,UAAU,MAAW,EAAA;AACjB,QAAA,MAAA,IAAI,MAAM,mBAAmB,CAAA;AAAA;AAGrC,MAAA,MAAM,YAAY,UAAW,EAAA;AAEvB,MAAA,MAAA,iBAAA,GAAoBC,oBAAY,CAAA,MAAA,CAAO,KAAK,CAAA;AAElD,MAAA,IAAI,CAAC,iBAAmB,EAAA;AACtB,QAAA,MAAM,IAAI,KAAA,CAAM,CAAwC,qCAAA,EAAA,KAAK,CAAE,CAAA,CAAA;AAAA;AAGjE,MAAAP,KAAA,CAAI,KAAM,CAAA,CAAA,MAAA,EAAS,IAAI,CAAA,cAAA,CAAA,EAAkB,OAAO,CAAA;AAEhD,MAAA,MAAM,CAAC,OAAA,EAAS,UAAU,CAAA,GAAI,uBAA2B,EAAA;AAEzC,MAAA,eAAA,CAAA,GAAA,CAAI,WAAW,UAAU,CAAA;AAEvB,MAAA,iBAAA,CAAA,IAAA,CAAK,iBAAkB,CAAA,IAAI,CAAG,EAAA;AAAA,QAC9C,OAAO,iBAAkB,CAAA,EAAA;AAAA,QACzB,SAAA;AAAA,QACA,OAAA,EAAS,gBAAiB,CAAA,SAAA,CAAU,OAAO;AAAA,OAC3B,CAAA;AAEX,MAAA,OAAA,OAAA;AAAA,KACT;AAAA,IACA,MAAA,CAAa,MAAc,OAA+B,EAAA;AACzC,MAAA,eAAA,aAAA,CACb,QACA,OACA,EAAA;AACA,QAAAA,KAAA,CAAI,KAAM,CAAA,CAAA,UAAA,EAAa,IAAI,CAAA,cAAA,CAAA,EAAkB,OAAO,CAAA;AAEpD,QAAA,MAAM,YAAY,MAAM,OAAA;AAAA,UACtB,gBAAA,CAAiB,WAAe,CAAA,OAAA,CAAQ,OAAO,CAAA;AAAA,UAC/C;AAAA,SACF;AAEO,QAAA,OAAA,gBAAA,CAAiB,UAAU,SAAS,CAAA;AAAA;AAG7C,MAAAM,gBAAA,CAAQ,MAAO,CAAA,iBAAA,CAAkB,IAAI,CAAA,EAAG,aAAa,CAAA;AAErD,MAAA,OAAO,MAAM;AACH,QAAAA,gBAAA,CAAA,aAAA,CAAc,iBAAkB,CAAA,IAAI,CAAC,CAAA;AAAA,OAC/C;AAAA;AACF,GACD,CAAA;AACH;AAEO,SAAS,0BACd,OACA,EAAA;AACA,EAAAN,KAAA,CAAI,MAAM,6BAA6B,CAAA;AAEC,EAAA,uCAAA,EAAA;AACvB,EAAA,gBAAA,EAAA;AAEjB,EAAA,OAAA,CAAA,GAAA,CAAY,kBAAqB,GAAA,IAAA,CAAK,SAAU,CAAA,OAAA,CAAQ,MAAM,CAAA;AAErD,EAAA,QAAA,CAAA,MAAA,CAAO,OAAO,OAAY,KAAA;AACjC,IAAAA,KAAA,CAAI,MAAM,CAAqB,kBAAA,EAAA,OAAA,CAAQ,IAAI,CAAA,WAAA,CAAA,EAAe,QAAQ,IAAI,CAAA;AACtE,IAAA,OAAO,OAAQ,CAAA,OAAA,CAAQ,OAAQ,CAAA,IAAA,EAAM,QAAQ,IAAI,CAAA;AAAA,GAClD,CAAA;AAED,EAAA,MAAA,CAAO,OAAO,YAAY;AACxB,IAAAA,KAAA,CAAI,MAAM,gBAAgB,CAAA;AAC1B,IAAA,MAAM,QAAQ,KAAM,EAAA;AAAA,GACrB,CAAA;AACH;;AC7HA,MAAM,YAAA,GAAe,OAAO,OAAO,CAAA;AAO5B,SAAS,WACd,KAC8B,EAAA;AAC9B,EAAA,OACE,OAAO,KAAU,KAAA,UAAA,IACjB,gBAAgB,KAChB,IAAA,KAAA,CAAM,YAAY,CAAM,KAAA,OAAA;AAE5B;AAEO,SAAS,MACd,OACqB,EAAA;AACrB,EAAM,MAAA,aAAA,GAAqC,UAAU,IAAe,KAAA;AAClE,IAAO,OAAA,OAAA,CAAQ,GAAG,IAAI,CAAA;AAAA,GACxB;AAEA,EAAA,aAAA,CAAc,YAAY,CAAI,GAAA,OAAA;AAE9B,EAAO,OAAA,aAAA;AACT;;AC3BA,MAAM,aAAA,GAAgB,OAAO,QAAQ,CAAA;AAU9B,SAAS,YACd,KACuB,EAAA;AACvB,EAAA,OACE,OAAO,KAAU,KAAA,UAAA,IACjB,iBAAiB,KACjB,IAAA,KAAA,CAAM,aAAa,CAAM,KAAA,QAAA;AAE7B;AAEO,SAAS,OACd,OACc,EAAA;AACd,EAAM,MAAA,cAAA,GAA+B,UAAU,IAAe,KAAA;AAC5D,IAAO,OAAA,OAAA,CAAQ,GAAG,IAAI,CAAA;AAAA,GACxB;AAEA,EAAA,cAAA,CAAe,aAAa,CAAI,GAAA,QAAA;AAEhC,EAAO,OAAA,cAAA;AACT;;AC9BA,MAAM,eAAA,GAAkB,OAAO,UAAU,CAAA;AAUlC,SAAS,cACd,KACiC,EAAA;AACjC,EAAA,OACE,OAAO,KAAU,KAAA,UAAA,IACjB,mBAAmB,KACnB,IAAA,KAAA,CAAM,eAAe,CAAM,KAAA,UAAA;AAE/B;AAEO,SAAS,SACd,OACwB,EAAA;AACxB,EAAM,MAAA,gBAAA,GAA2C,UAAU,IAAe,KAAA;AACxE,IAAO,OAAA,OAAA,CAAQ,GAAG,IAAI,CAAA;AAAA,GACxB;AAEA,EAAA,gBAAA,CAAiB,eAAe,CAAI,GAAA,UAAA;AAEpC,EAAO,OAAA,gBAAA;AACT;;ACnBA,SAAS,iBAAiB,KAAkD,EAAA;AAC1E,EAAA,OAAO,OAAO,WAAgB,KAAA,MAAA;AAChC;AAEA,SAAS,OAAA,CAAQ,aAAqB,GAAa,EAAA;AACjD,EAAI,IAAA,CAAC,aAAoB,OAAA,GAAA;AAEzB,EAAO,OAAA,CAAA,EAAG,WAAW,CAAA,CAAA,EAAI,GAAG,CAAA,CAAA;AAC9B;AAEA,SAAS,kBAAA,CACP,WACA,EAAA,MAAA,EACA,KACA,EAAA;AACA,EAAA,KAAA,MAAW,CAAC,GAAK,EAAA,KAAK,KAAK,MAAO,CAAA,OAAA,CAAQ,KAAK,CAAG,EAAA;AAChD,IAAM,MAAA,IAAA,GAAO,OAAQ,CAAA,WAAA,EAAa,GAAG,CAAA;AAErC,IAAI,IAAA,gBAAA,CAAiB,KAAK,CAAG,EAAA;AAC3B,MAAmB,kBAAA,CAAA,IAAA,EAAM,QAAQ,KAAK,CAAA;AAAA,KACjC,MAAA;AACL,MAAO,MAAA,CAAA,GAAA,CAAI,MAAM,KAAiB,CAAA;AAAA;AACpC;AAEJ;AAEO,SAAS,gCACd,KACyB,EAAA;AACzB,EAAM,MAAA,GAAA,uBAAU,GAAsB,EAAA;AAEtC,EAAmB,kBAAA,CAAA,EAAA,EAAI,KAAK,KAAK,CAAA;AAEjC,EAAO,OAAA,GAAA;AACT;;ACjCO,SAAS,uBAAuB,KAA2B,EAAA;AAChE,EAAM,MAAA,GAAA,GAAM,gCAAgC,KAAK,CAAA;AAEjD,EAAA,MAAM,SAA8B,EAAC;AAErC,EAAA,KAAA,MAAW,CAAC,GAAK,EAAA,KAAK,CAAK,IAAA,GAAA,CAAI,SAAW,EAAA;AACxC,IAAI,IAAA,UAAA,CAAW,KAAK,CAAG,EAAA;AACrB,MAAA,MAAA,CAAO,GAAG,CAAI,GAAA;AAAA,QACZ,IAAM,EAAA;AAAA,OACR;AACA,MAAA;AAAA;AAGF,IAAI,IAAA,aAAA,CAAc,KAAK,CAAG,EAAA;AACxB,MAAA,MAAA,CAAO,GAAG,CAAI,GAAA;AAAA,QACZ,IAAM,EAAA;AAAA,OACR;AACA,MAAA;AAAA;AAGF,IAAI,IAAA,WAAA,CAAY,KAAK,CAAG,EAAA;AACtB,MAAA,MAAA,CAAO,GAAG,CAAI,GAAA;AAAA,QACZ,IAAM,EAAA;AAAA,OACR;AACA,MAAA;AAAA;AAGF,IAAI,IAAA,OAAO,UAAU,UAAY,EAAA;AAC/B,MAAA,MAAA,CAAO,GAAG,CAAI,GAAA;AAAA,QACZ,IAAM,EAAA;AAAA,OACR;AACA,MAAA;AAAA;AAGF,IAAA,OAAA,CAAQ,IAAK,CAAA,CAAA,oBAAA,EAAuB,GAAG,CAAA,CAAA,EAAI,KAAK,CAAA;AAAA;AAGlD,EAAO,OAAA,MAAA;AACT;;ACzCA,MAAM,GAAA,GAAM,aAAa,gCAAgC,CAAA;AAelD,MAAM,aAA4C,CAAA;AAAA,EAIvD,YAA4B,KAAU,EAAA;AAAV,IAAA,IAAA,CAAA,KAAA,GAAA,KAAA;AAC1B,IAAK,IAAA,CAAA,WAAA,GACH,gCAAqD,KAAK,CAAA;AAC5D,IAAK,IAAA,CAAA,MAAA,GAAS,uBAAuB,KAAK,CAAA;AAAA;AAC5C,EAPQ,WAAA;AAAA,EACQ,MAAA;AAAA,EAQR,gBAAA,uBAAuB,GAAsB,EAAA;AAAA,EAC7C,cAAA,uBAAqB,GAA2B,EAAA;AAAA,EAExD,MAAc,uBAA0B,GAAA;AACtC,IAAO,OAAA,IAAA,CAAK,iBAAiB,IAAM,EAAA;AACjC,MAAA,MAAM,QAAW,GAAA,CAAC,GAAG,IAAA,CAAK,gBAAgB,CAAA;AAE1C,MAAA,KAAA,MAAW,WAAW,QAAU,EAAA;AAC9B,QAAI,IAAA;AACF,UAAM,MAAA,OAAA;AAAA,SACA,CAAA,MAAA;AAAA;AAAC;AACX;AACF;AACF,EAEQ,mBAAmB,OAA2B,EAAA;AACpD,IAAK,IAAA,CAAA,gBAAA,CAAiB,IAAI,OAAO,CAAA;AAEjC,IAAA,OAAA,CAAQ,QAAQ,MAAM;AACpB,MAAK,IAAA,CAAA,gBAAA,CAAiB,OAAO,OAAO,CAAA;AAAA,KACrC,CAAA;AAAA;AACH,EAEQ,WAAW,IAAc,EAAA;AAC/B,IAAA,MAAM,OAAU,GAAA,IAAA,CAAK,WAAY,CAAA,GAAA,CAAI,IAAI,CAAA;AAEzC,IAAA,IAAI,CAAC,OAAS,EAAA;AACZ,MAAA,MAAM,IAAI,KAAA,CAAM,CAAoB,iBAAA,EAAA,IAAI,CAAY,UAAA,CAAA,CAAA;AAAA;AAGtD,IAAO,OAAA,OAAA;AAAA;AACT,EAEA,MAAM,OAAQ,CAAA,IAAA,EAAc,IAAiB,EAAA;AAC3C,IAAA,GAAA,CAAI,KAAM,CAAA,CAAA,SAAA,EAAY,IAAI,CAAA,WAAA,CAAA,EAAe,IAAI,CAAA;AAE7C,IAAM,MAAA,OAAA,GAAU,IAAK,CAAA,UAAA,CAAW,IAAI,CAAA;AAEpC,IAAA,IAAI,CAAC,OAAS,EAAA;AACZ,MAAA,MAAM,IAAI,KAAA,CAAM,CAAoB,iBAAA,EAAA,IAAI,CAAY,UAAA,CAAA,CAAA;AAAA;AAGtD,IAAA,MAAM,KAAK,uBAAwB,EAAA;AAEnC,IAAI,IAAA,aAAA,CAAc,OAAO,CAAG,EAAA;AAC1B,MAAM,MAAA,aAAA,GAAgB,OAAQ,CAAA,GAAG,IAAI,CAAA;AAErC,MAAA,IAAA,CAAK,mBAAmB,aAAa,CAAA;AAErC,MAAO,OAAA,aAAA;AAAA;AAGT,IAAI,IAAA,WAAA,CAAY,OAAO,CAAG,EAAA;AACxB,MAAM,MAAA,cAAA,GAAiB,OAAQ,CAAA,GAAG,IAAI,CAAA;AAEtC,MAAK,IAAA,CAAA,cAAA,CAAe,IAAI,cAAc,CAAA;AAEtC,MAAA,OAAO,YAAY;AACjB,QAAK,IAAA,CAAA,cAAA,CAAe,OAAO,cAAc,CAAA;AAEzC,QAAA,MAAM,UAAU,MAAM,cAAA;AAEtB,QAAI,IAAA;AACF,UAAQ,OAAA,EAAA;AAAA,SACF,CAAA,MAAA;AACN,UAAA,OAAA,CAAQ,MAAM,0BAA0B,CAAA;AAAA;AAC1C,OACF;AAAA;AAGF,IAAO,OAAA,OAAA,CAAQ,GAAG,IAAI,CAAA;AAAA;AACxB,EAEA,MAAM,eAAkB,GAAA;AACtB,IAAA,MAAM,eAAkB,GAAA,CAAC,GAAG,IAAA,CAAK,cAAc,CAAA;AAE/C,IAAA,IAAA,CAAK,eAAe,KAAM,EAAA;AAE1B,IAAA,KAAA,MAAW,kBAAkB,eAAiB,EAAA;AAC5C,MAAA,MAAM,UAAU,MAAM,cAAA;AAEtB,MAAI,IAAA;AACF,QAAQ,OAAA,EAAA;AAAA,OACF,CAAA,MAAA;AACN,QAAQ,OAAA,CAAA,KAAA,CAAM,4BAA4B,cAAc,CAAA;AAAA;AAC1D;AACF;AACF,EAEA,MAAM,KAAQ,GAAA;AACZ,IAAA,GAAA,CAAI,MAAM,OAAO,CAAA;AACjB,IAAA,MAAM,KAAK,eAAgB,EAAA;AAE3B,IAAA,IAAA,CAAK,iBAAiB,KAAM,EAAA;AAAA;AAEhC;AAEO,SAAS,oBACd,KACkB,EAAA;AAClB,EAAO,OAAA,IAAI,cAAc,KAAK,CAAA;AAChC;;ACrIA,IAAI,GAAM,GAAA,KAAA;AAEH,MAAM,gBAAgB,mBAAoB,CAAA;AAAA,EAC/C,IAAM,EAAA,KAAA,CAAM,OAAO,IAAA,EAAY,UAA4C,KAAA;AACzE,IAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,EAAA,EAAI,CAAK,EAAA,EAAA;AAC3B,MAAA,UAAA,GAAa,CAAC,CAAA;AACd,MAAA,MAAM,IAAI,OAAQ,CAAA,CAAC,YAAY,UAAW,CAAA,OAAA,EAAS,EAAE,CAAC,CAAA;AAAA;AAGxD,IAAO,OAAA,CAAA,KAAA,EAAQ,IAAK,CAAA,WAAA,EAAa,CAAA,CAAA;AAAA,GAClC,CAAA;AAAA,EACD,KAAO,EAAA,MAAA;AAAA,IACL,CACE,UACA,QACG,KAAA;AACH,MAAA,OAAA,CAAQ,IAAI,kBAAkB,CAAA;AAC9B,MAAA,SAAS,KAAKQ,KAAc,EAAA;AAC1B,QAAQ,OAAA,CAAA,GAAA,CAAI,QAAQA,KAAI,CAAA;AAAA;AAG1B,MAAM,MAAA,UAAA,GAAa,YAAY,MAAM;AACnC,QAAS,QAAA,iBAAA,IAAI,IAAK,EAAA,EAAG,IAAI,CAAA;AAAA,SACxB,QAAQ,CAAA;AAEX,MAAA,OAAO,MAAM;AACX,QAAA,OAAA,CAAQ,IAAI,mBAAmB,CAAA;AAC/B,QAAA,aAAA,CAAc,UAAU,CAAA;AAAA,OAC1B;AAAA;AACF,GACF;AAAA,EACA,GAAK,EAAA;AAAA,IACH,MAAA,EAAQ,QAAS,CAAA,OAAO,OAAoB,KAAA;AAC1C,MAAA,MAAM,IAAI,OAAQ,CAAA,CAAC,YAAY,UAAW,CAAA,OAAA,EAAS,GAAI,CAAC,CAAA;AACxD,MAAM,GAAA,GAAA,OAAA;AAAA,KACP,CAAA;AAAA,IACD,GAAA,EAAK,MAAM,YAAY;AACrB,MAAO,OAAA,GAAA;AAAA,KACR;AAAA;AAEL,CAAC,CAAA;;AClCDC,YAAI,CAAA,WAAA,CAAY,YAAa,CAAA,UAAA,EAAY,aAAa,CAAA;AAWtD,OAAA,CAAA,GAAA,CAAY,IAAO,GAAA,IAAA,CAAK,IAAK,CAAA,SAAA,EAAW,OAAO,CAAA;AAC/C,OAAY,CAAA,GAAA,CAAA,WAAA,GAAcA,aAAI,UAC1B,GAAA,OAAA,CAAA,GAAA,CAAY,OACZ,IAAK,CAAA,IAAA,CAAK,OAAY,CAAA,GAAA,CAAA,IAAA,EAAM,WAAW,CAAA;AAE3C,OAAA,CAAA,GAAA,CAAY,iBAAoB,GAAA,MAAA;AAEhC,IAAI,GAA4B,GAAA,IAAA;AAEhC,MAAM,mBAAA,GAAsB,YAAY,qBAAqB,CAAA;AAE7D,SAAS,YAAe,GAAA;AACtB,EAAA,yBAAA,CAA0B,aAAa,CAAA;AAEvC,EAAA,GAAA,GAAM,IAAIC,sBAAc,CAAA;AAAA,IACtB,KAAO,EAAA,IAAA;AAAA,IACP,MAAQ,EAAA,GAAA;AAAA,IACR,cAAgB,EAAA;AAAA,MACd,eAAiB,EAAA,IAAA;AAAA,MACjB,gBAAkB,EAAA,IAAA;AAAA,MAClB,OAAS,EAAA,IAAA,CAAK,IAAK,CAAA,SAAA,EAAW,YAAY;AAAA;AAC5C,GACD,CAAA;AAED,EAAA,UAAA,CAAW,MAAM;AACf,IAAA,UAAA,CAAW,IAAK,EAAA,CAAE,IAAK,CAAA,CAAC,EAAO,KAAA;AACrB,MAAA,OAAA,CAAA,GAAA,CAAI,MAAM,EAAE,CAAA;AAAA,KACrB,CAAA;AAAA,KACA,GAAI,CAAA;AAGH,EAAA,GAAA,CAAA,WAAA,CAAY,EAAG,CAAA,iBAAA,EAAmB,MAAM;AAC1C,IAAA,GAAA,EAAK,YAAY,IAAK,CAAA,sBAAA,EAAA,qBAA4B,IAAK,EAAA,EAAE,gBAAgB,CAAA;AAAA,GAC1E,CAAA;AAED,EAAA,IAAI,mBAAqB,EAAA;AACvB,IAAA,GAAA,CAAI,QAAQ,mBAAmB,CAAA;AAAA,GAC1B,MAAA;AAEL,IAAA,GAAA,CAAI,SAAS,IAAK,CAAA,IAAA,CAAK,OAAY,CAAA,GAAA,CAAA,IAAA,EAAgB,YAAY,CAAC,CAAA;AAAA;AAEpE;AAEAD,YAAI,CAAA,EAAA,CAAG,qBAAqB,MAAM;AAC1B,EAAA,GAAA,GAAA,IAAA;AACF,EAAA,IAAA,OAAA,CAAQ,aAAa,QAAU,EAAA;AACjC,IAAAA,YAAA,CAAI,IAAK,EAAA;AAAA;AAEb,CAAC,CAAA;AAEDA,YAAI,CAAA,SAAA,EAAY,CAAA,IAAA,CAAK,YAAY,CAAA;AAEjCA,YAAI,CAAA,EAAA,CAAG,YAAY,MAAM;AACvB,EAAA,IAAIC,sBAAc,CAAA,aAAA,EAAgB,CAAA,MAAA,KAAW,CAAG,EAAA;AACjC,IAAA,YAAA,EAAA;AAAA;AAEjB,CAAC,CAAA;;","x_google_ignoreList":[10,11,12,13,14,15,16,17,18,19,20,21,22]}